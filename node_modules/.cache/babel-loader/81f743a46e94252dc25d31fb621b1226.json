{"ast":null,"code":"var _jsxFileName = \"/home/clepson/Documentos/minhas-financas-app/src/main/provedorAutenticacao.js\";\nimport React from 'react';\nimport ApiService from '../app/apiservice';\nimport AuthService from '../app/service/authService';\nimport jwt from 'jsonwebtoken';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/React.createContext();\nexport const AuthConsumer = AuthContext.Consumer;\nconst AuthProvider = AuthContext.Provider;\n\nclass ProvedorAutenticacao extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      usuarioAutenticado: null,\n      isAutenticado: false,\n      isLoading: true\n    };\n\n    this.iniciarSessao = tokenDTO => {\n      const token = tokenDTO.token;\n      console.log('iniciarSessao token: ', token);\n      const claims = jwt.decode(token);\n      const usuario = {\n        id: claims.userid,\n        nome: claims.nome\n      };\n      AuthService.logar(usuario, token);\n      this.setState({\n        isAutenticado: true,\n        usuarioAutenticado: usuario\n      });\n    };\n\n    this.encerrarSessao = () => {\n      AuthService.removerUsuarioAutenticado();\n      this.setState({\n        isAutenticado: false,\n        usuarioAutenticado: null\n      });\n    };\n  }\n\n  // método chamado quando entra no componente\n  componentDidMount() {\n    const isAutenticado = AuthService.isUsuarioAutenticado();\n    console.log('componentDidMount. autenticado? ', isAutenticado);\n\n    if (isAutenticado) {\n      console.log('componentDidMount inside if');\n      const usuario = AuthService.refreshSession();\n      this.setState({\n        isAutenticado: true,\n        usuarioAutenticado: usuario,\n        isLoading: false\n      });\n    }\n  }\n\n  render() {\n    const contexto = {\n      usuarioAutenticado: this.state.usuarioAutenticado,\n      isAutenticado: this.state.isAutenticado,\n      iniciarSessao: this.iniciarSessao,\n      encerrarSessao: this.encerrarSessao\n    };\n    return /*#__PURE__*/_jsxDEV(AuthProvider, {\n      value: contexto,\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ProvedorAutenticacao;","map":{"version":3,"sources":["/home/clepson/Documentos/minhas-financas-app/src/main/provedorAutenticacao.js"],"names":["React","ApiService","AuthService","jwt","AuthContext","createContext","AuthConsumer","Consumer","AuthProvider","Provider","ProvedorAutenticacao","Component","state","usuarioAutenticado","isAutenticado","isLoading","iniciarSessao","tokenDTO","token","console","log","claims","decode","usuario","id","userid","nome","logar","setState","encerrarSessao","removerUsuarioAutenticado","componentDidMount","isUsuarioAutenticado","refreshSession","render","contexto","props","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,GAAP,MAAgB,cAAhB;;AAEA,OAAO,MAAMC,WAAW,gBAAGJ,KAAK,CAACK,aAAN,EAApB;AACP,OAAO,MAAMC,YAAY,GAAGF,WAAW,CAACG,QAAjC;AACP,MAAMC,YAAY,GAAGJ,WAAW,CAACK,QAAjC;;AAEA,MAAMC,oBAAN,SAAmCV,KAAK,CAACW,SAAzC,CAAmD;AAAA;AAAA;AAAA,SAE/CC,KAF+C,GAEvC;AACJC,MAAAA,kBAAkB,EAAE,IADhB;AAEJC,MAAAA,aAAa,EAAE,KAFX;AAGJC,MAAAA,SAAS,EAAE;AAHP,KAFuC;;AAAA,SAQ/CC,aAR+C,GAQ9BC,QAAD,IAAc;AAC1B,YAAMC,KAAK,GAAGD,QAAQ,CAACC,KAAvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCF,KAArC;AACA,YAAMG,MAAM,GAAGlB,GAAG,CAACmB,MAAJ,CAAWJ,KAAX,CAAf;AACA,YAAMK,OAAO,GAAG;AACZC,QAAAA,EAAE,EAAEH,MAAM,CAACI,MADC;AAEZC,QAAAA,IAAI,EAAEL,MAAM,CAACK;AAFD,OAAhB;AAKAxB,MAAAA,WAAW,CAACyB,KAAZ,CAAkBJ,OAAlB,EAA2BL,KAA3B;AACA,WAAKU,QAAL,CAAe;AAAEd,QAAAA,aAAa,EAAE,IAAjB;AAAuBD,QAAAA,kBAAkB,EAAEU;AAA3C,OAAf;AACH,KAnB8C;;AAAA,SAqB/CM,cArB+C,GAqB9B,MAAM;AACnB3B,MAAAA,WAAW,CAAC4B,yBAAZ;AACA,WAAKF,QAAL,CAAe;AAAEd,QAAAA,aAAa,EAAE,KAAjB;AAAwBD,QAAAA,kBAAkB,EAAE;AAA5C,OAAf;AACH,KAxB8C;AAAA;;AA0B/C;AACAkB,EAAAA,iBAAiB,GAAE;AACf,UAAMjB,aAAa,GAAGZ,WAAW,CAAC8B,oBAAZ,EAAtB;AACAb,IAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDN,aAAhD;;AAEA,QAAGA,aAAH,EAAiB;AACbK,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACA,YAAMG,OAAO,GAAGrB,WAAW,CAAC+B,cAAZ,EAAhB;AAEA,WAAKL,QAAL,CAAc;AACVd,QAAAA,aAAa,EAAE,IADL;AAEVD,QAAAA,kBAAkB,EAAEU,OAFV;AAGVR,QAAAA,SAAS,EAAE;AAHD,OAAd;AAKH;AACJ;;AAEDmB,EAAAA,MAAM,GAAE;AACJ,UAAMC,QAAQ,GAAG;AACbtB,MAAAA,kBAAkB,EAAE,KAAKD,KAAL,CAAWC,kBADlB;AAEbC,MAAAA,aAAa,EAAE,KAAKF,KAAL,CAAWE,aAFb;AAGbE,MAAAA,aAAa,EAAE,KAAKA,aAHP;AAIba,MAAAA,cAAc,EAAE,KAAKA;AAJR,KAAjB;AAOA,wBACI,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEM,QAArB;AAAA,gBACK,KAAKC,KAAL,CAAWC;AADhB;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAxD8C;;AA4DnD,eAAe3B,oBAAf","sourcesContent":["import React from 'react';\nimport ApiService from '../app/apiservice';\nimport AuthService from '../app/service/authService';\nimport jwt from 'jsonwebtoken';\n\nexport const AuthContext = React.createContext();\nexport const AuthConsumer = AuthContext.Consumer;\nconst AuthProvider = AuthContext.Provider;\n\nclass ProvedorAutenticacao extends React.Component {\n\n    state = {\n        usuarioAutenticado: null,\n        isAutenticado: false,\n        isLoading: true\n    }\n\n    iniciarSessao = (tokenDTO) => {\n        const token = tokenDTO.token;\n        console.log('iniciarSessao token: ', token)\n        const claims = jwt.decode(token);\n        const usuario = {\n            id: claims.userid,\n            nome: claims.nome\n        }\n\n        AuthService.logar(usuario, token);\n        this.setState( { isAutenticado: true, usuarioAutenticado: usuario } );\n    }\n\n    encerrarSessao = () => {\n        AuthService.removerUsuarioAutenticado();\n        this.setState( { isAutenticado: false, usuarioAutenticado: null} );\n    }\n\n    // método chamado quando entra no componente\n    componentDidMount(){\n        const isAutenticado = AuthService.isUsuarioAutenticado();\n        console.log('componentDidMount. autenticado? ', isAutenticado);\n\n        if(isAutenticado){\n            console.log('componentDidMount inside if');\n            const usuario = AuthService.refreshSession();\n\n            this.setState({\n                isAutenticado: true,\n                usuarioAutenticado: usuario,\n                isLoading: false\n            });\n        }\n    }\n\n    render(){\n        const contexto = {\n            usuarioAutenticado: this.state.usuarioAutenticado,\n            isAutenticado: this.state.isAutenticado,\n            iniciarSessao: this.iniciarSessao,\n            encerrarSessao: this.encerrarSessao\n        }\n\n        return(\n            <AuthProvider value={contexto}>\n                {this.props.children}\n            </AuthProvider>\n        );\n    }\n\n}\n\nexport default ProvedorAutenticacao;"]},"metadata":{},"sourceType":"module"}