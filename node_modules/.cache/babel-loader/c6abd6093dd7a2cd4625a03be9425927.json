{"ast":null,"code":"import _objectSpread from\"/home/clepson/Documentos/minhas-financas-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/home/clepson/Documentos/minhas-financas-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/clepson/Documentos/minhas-financas-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/clepson/Documentos/minhas-financas-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/clepson/Documentos/minhas-financas-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import ApiService from'../app/apiservice';import AuthService from'../app/service/authService';import jwt from'jsonwebtoken';import{jsx as _jsx}from\"react/jsx-runtime\";export var AuthContext=/*#__PURE__*/React.createContext();export var AuthConsumer=AuthContext.Consumer;var AuthProvider=AuthContext.Provider;var ProvedorAutenticacao=/*#__PURE__*/function(_React$Component){_inherits(ProvedorAutenticacao,_React$Component);var _super=_createSuper(ProvedorAutenticacao);function ProvedorAutenticacao(){var _this;_classCallCheck(this,ProvedorAutenticacao);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={usuarioAutenticado:null,isAutenticado:false,isLoading:true};_this.iniciarSessao=function(tokenDTO){var token=tokenDTO.token;console.log('iniciarSessao token: ',token);var claims=jwt.decode(token);var usuario={id:claims.userid,nome:claims.nome};AuthService.logar(usuario,token);_this.setState({isAutenticado:true,usuarioAutenticado:usuario});};_this.encerrarSessao=function(){AuthService.removerUsuarioAutenticado();_this.setState({isAutenticado:false,usuarioAutenticado:null});};return _this;}_createClass(ProvedorAutenticacao,[{key:\"componentDidMount\",value:// método chamado quando entra no componente\nfunction componentDidMount(){var isAutenticado=AuthService.isUsuarioAutenticado();console.log('componentDidMount. autenticado? ',isAutenticado);if(isAutenticado){console.log('componentDidMount inside if');var usuario=AuthService.refreshSession();this.setState({isAutenticado:true,usuarioAutenticado:usuario,isLoading:false});}else{this.setState(function(previousState){return _objectSpread(_objectSpread({},previousState),{},{isLoading:false});});}}},{key:\"render\",value:function render(){if(this.state.isLoading){return null;}var contexto={usuarioAutenticado:this.state.usuarioAutenticado,isAutenticado:this.state.isAutenticado,iniciarSessao:this.iniciarSessao,encerrarSessao:this.encerrarSessao};return/*#__PURE__*/_jsx(AuthProvider,{value:contexto,children:this.props.children});}}]);return ProvedorAutenticacao;}(React.Component);export default ProvedorAutenticacao;","map":{"version":3,"sources":["/home/clepson/Documentos/minhas-financas-app/src/main/provedorAutenticacao.js"],"names":["React","ApiService","AuthService","jwt","AuthContext","createContext","AuthConsumer","Consumer","AuthProvider","Provider","ProvedorAutenticacao","state","usuarioAutenticado","isAutenticado","isLoading","iniciarSessao","tokenDTO","token","console","log","claims","decode","usuario","id","userid","nome","logar","setState","encerrarSessao","removerUsuarioAutenticado","isUsuarioAutenticado","refreshSession","previousState","contexto","props","children","Component"],"mappings":"8xBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,mBAAvB,CACA,MAAOC,CAAAA,WAAP,KAAwB,4BAAxB,CACA,MAAOC,CAAAA,GAAP,KAAgB,cAAhB,C,2CAEA,MAAO,IAAMC,CAAAA,WAAW,cAAGJ,KAAK,CAACK,aAAN,EAApB,CACP,MAAO,IAAMC,CAAAA,YAAY,CAAGF,WAAW,CAACG,QAAjC,CACP,GAAMC,CAAAA,YAAY,CAAGJ,WAAW,CAACK,QAAjC,C,GAEMC,CAAAA,oB,+XAEFC,K,CAAQ,CACJC,kBAAkB,CAAE,IADhB,CAEJC,aAAa,CAAE,KAFX,CAGJC,SAAS,CAAE,IAHP,C,OAMRC,a,CAAgB,SAACC,QAAD,CAAc,CAC1B,GAAMC,CAAAA,KAAK,CAAGD,QAAQ,CAACC,KAAvB,CACAC,OAAO,CAACC,GAAR,CAAY,uBAAZ,CAAqCF,KAArC,EACA,GAAMG,CAAAA,MAAM,CAAGjB,GAAG,CAACkB,MAAJ,CAAWJ,KAAX,CAAf,CACA,GAAMK,CAAAA,OAAO,CAAG,CACZC,EAAE,CAAEH,MAAM,CAACI,MADC,CAEZC,IAAI,CAAEL,MAAM,CAACK,IAFD,CAAhB,CAKAvB,WAAW,CAACwB,KAAZ,CAAkBJ,OAAlB,CAA2BL,KAA3B,EACA,MAAKU,QAAL,CAAe,CAAEd,aAAa,CAAE,IAAjB,CAAuBD,kBAAkB,CAAEU,OAA3C,CAAf,EACH,C,OAEDM,c,CAAiB,UAAM,CACnB1B,WAAW,CAAC2B,yBAAZ,GACA,MAAKF,QAAL,CAAe,CAAEd,aAAa,CAAE,KAAjB,CAAwBD,kBAAkB,CAAE,IAA5C,CAAf,EACH,C,iFAED;AACA,4BAAmB,CACf,GAAMC,CAAAA,aAAa,CAAGX,WAAW,CAAC4B,oBAAZ,EAAtB,CACAZ,OAAO,CAACC,GAAR,CAAY,kCAAZ,CAAgDN,aAAhD,EAEA,GAAGA,aAAH,CAAiB,CACbK,OAAO,CAACC,GAAR,CAAY,6BAAZ,EACA,GAAMG,CAAAA,OAAO,CAAGpB,WAAW,CAAC6B,cAAZ,EAAhB,CAEA,KAAKJ,QAAL,CAAc,CACVd,aAAa,CAAE,IADL,CAEVD,kBAAkB,CAAEU,OAFV,CAGVR,SAAS,CAAE,KAHD,CAAd,EAKH,CATD,IASO,CACH,KAAKa,QAAL,CAAe,SAAAK,aAAa,CAAI,CAC5B,sCACOA,aADP,MAEIlB,SAAS,CAAE,KAFf,GAIH,CALD,EAMH,CACJ,C,sBAED,iBAAQ,CAEJ,GAAG,KAAKH,KAAL,CAAWG,SAAd,CAAwB,CACpB,MAAO,KAAP,CACH,CAED,GAAMmB,CAAAA,QAAQ,CAAG,CACbrB,kBAAkB,CAAE,KAAKD,KAAL,CAAWC,kBADlB,CAEbC,aAAa,CAAE,KAAKF,KAAL,CAAWE,aAFb,CAGbE,aAAa,CAAE,KAAKA,aAHP,CAIba,cAAc,CAAE,KAAKA,cAJR,CAAjB,CAOA,mBACI,KAAC,YAAD,EAAc,KAAK,CAAEK,QAArB,UACK,KAAKC,KAAL,CAAWC,QADhB,EADJ,CAKH,C,kCApE8BnC,KAAK,CAACoC,S,EAwEzC,cAAe1B,CAAAA,oBAAf","sourcesContent":["import React from 'react';\nimport ApiService from '../app/apiservice';\nimport AuthService from '../app/service/authService';\nimport jwt from 'jsonwebtoken';\n\nexport const AuthContext = React.createContext();\nexport const AuthConsumer = AuthContext.Consumer;\nconst AuthProvider = AuthContext.Provider;\n\nclass ProvedorAutenticacao extends React.Component {\n\n    state = {\n        usuarioAutenticado: null,\n        isAutenticado: false,\n        isLoading: true\n    }\n\n    iniciarSessao = (tokenDTO) => {\n        const token = tokenDTO.token;\n        console.log('iniciarSessao token: ', token)\n        const claims = jwt.decode(token);\n        const usuario = {\n            id: claims.userid,\n            nome: claims.nome\n        }\n\n        AuthService.logar(usuario, token);\n        this.setState( { isAutenticado: true, usuarioAutenticado: usuario } );\n    }\n\n    encerrarSessao = () => {\n        AuthService.removerUsuarioAutenticado();\n        this.setState( { isAutenticado: false, usuarioAutenticado: null} );\n    }\n\n    // método chamado quando entra no componente\n    componentDidMount(){\n        const isAutenticado = AuthService.isUsuarioAutenticado();\n        console.log('componentDidMount. autenticado? ', isAutenticado);\n\n        if(isAutenticado){\n            console.log('componentDidMount inside if');\n            const usuario = AuthService.refreshSession();\n\n            this.setState({\n                isAutenticado: true,\n                usuarioAutenticado: usuario,\n                isLoading: false\n            });\n        } else {\n            this.setState( previousState => {\n                return {\n                    ...previousState,\n                    isLoading: false\n                }\n            });\n        }\n    }\n\n    render(){\n\n        if(this.state.isLoading){\n            return null;\n        }\n\n        const contexto = {\n            usuarioAutenticado: this.state.usuarioAutenticado,\n            isAutenticado: this.state.isAutenticado,\n            iniciarSessao: this.iniciarSessao,\n            encerrarSessao: this.encerrarSessao\n        }\n\n        return(\n            <AuthProvider value={contexto}>\n                {this.props.children}\n            </AuthProvider>\n        );\n    }\n\n}\n\nexport default ProvedorAutenticacao;"]},"metadata":{},"sourceType":"module"}