{"ast":null,"code":"import LocalStorageService from \"./localStorageService\";\nimport jwt from 'jsonwebtoken';\nimport ApiService from \"../apiservice\";\nexport const USUARIO_LOGADO = '_usuario_logado';\nexport const TOKEN = 'access_token';\nexport default class AuthService {\n  static isUsuarioAutenticado() {\n    try {\n      //const usuario = LocalStorageService.obterItem(USUARIO_LOGADO);\n      const token = LocalStorageService.obterItem(TOKEN);\n      const decodedToken = jwt.decode(token);\n      const expiration = decodedToken.exp; // var expiration = 1000;\n      // if(token){\n      //     console.log('1 token: ', token);\n      //     expiration = jwt.decode(token).exp;\n      // }\n\n      console.log('2 token: ', token);\n      const isTokenValido = Date.now() >= expiration * 1000; //return usuario && usuario.id;\n\n      return !isTokenValido;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  static removerUsuarioAutenticado() {\n    LocalStorageService.removerItem(USUARIO_LOGADO);\n    LocalStorageService.removerItem(TOKEN);\n  }\n\n  static logar(usuario, token) {\n    console.log('logar');\n    LocalStorageService.adicionarItem(USUARIO_LOGADO, usuario);\n    LocalStorageService.adicionarItem(TOKEN, token);\n    ApiService.registrarToken(token);\n  }\n\n  static obterUsuarioLogado() {\n    return LocalStorageService.obterItem(USUARIO_LOGADO);\n  }\n\n  static refreshSession() {\n    const token = LocalStorageService.obterItem(TOKEN);\n    const usuario = AuthService.obterUsuarioLogado();\n    console.log('refreshSession user', usuario);\n    AuthService.logar(usuario, token);\n    return usuario;\n  }\n\n}","map":{"version":3,"sources":["/home/clepson/Documentos/minhas-financas-app/src/app/service/authService.js"],"names":["LocalStorageService","jwt","ApiService","USUARIO_LOGADO","TOKEN","AuthService","isUsuarioAutenticado","token","obterItem","decodedToken","decode","expiration","exp","console","log","isTokenValido","Date","now","err","removerUsuarioAutenticado","removerItem","logar","usuario","adicionarItem","registrarToken","obterUsuarioLogado","refreshSession"],"mappings":"AAAA,OAAOA,mBAAP,MAAgC,uBAAhC;AAEA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,OAAO,MAAMC,cAAc,GAAG,iBAAvB;AACP,OAAO,MAAMC,KAAK,GAAG,cAAd;AAEP,eAAe,MAAMC,WAAN,CAAkB;AAEF,SAApBC,oBAAoB,GAAE;AACzB,QAAI;AACA;AACA,YAAMC,KAAK,GAAGP,mBAAmB,CAACQ,SAApB,CAA8BJ,KAA9B,CAAd;AACA,YAAMK,YAAY,GAAGR,GAAG,CAACS,MAAJ,CAAWH,KAAX,CAArB;AACA,YAAMI,UAAU,GAAGF,YAAY,CAACG,GAAhC,CAJA,CAKA;AACA;AACA;AACA;AACA;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBP,KAAzB;AAEA,YAAMQ,aAAa,GAAGC,IAAI,CAACC,GAAL,MAAeN,UAAU,GAAG,IAAlD,CAZA,CAcA;;AACA,aAAO,CAACI,aAAR;AACH,KAhBD,CAgBE,OAAOG,GAAP,EAAY;AACV,aAAO,KAAP;AACH;AACJ;;AAE+B,SAAzBC,yBAAyB,GAAE;AAC9BnB,IAAAA,mBAAmB,CAACoB,WAApB,CAAgCjB,cAAhC;AACAH,IAAAA,mBAAmB,CAACoB,WAApB,CAAgChB,KAAhC;AACH;;AAEW,SAALiB,KAAK,CAACC,OAAD,EAAUf,KAAV,EAAgB;AACxBM,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAd,IAAAA,mBAAmB,CAACuB,aAApB,CAAkCpB,cAAlC,EAAkDmB,OAAlD;AACAtB,IAAAA,mBAAmB,CAACuB,aAApB,CAAkCnB,KAAlC,EAAyCG,KAAzC;AACAL,IAAAA,UAAU,CAACsB,cAAX,CAA0BjB,KAA1B;AACH;;AAEwB,SAAlBkB,kBAAkB,GAAE;AACvB,WAAOzB,mBAAmB,CAACQ,SAApB,CAA8BL,cAA9B,CAAP;AACH;;AAEoB,SAAduB,cAAc,GAAE;AACnB,UAAMnB,KAAK,GAAGP,mBAAmB,CAACQ,SAApB,CAA8BJ,KAA9B,CAAd;AACA,UAAMkB,OAAO,GAAGjB,WAAW,CAACoB,kBAAZ,EAAhB;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCQ,OAAnC;AACAjB,IAAAA,WAAW,CAACgB,KAAZ,CAAkBC,OAAlB,EAA2Bf,KAA3B;AAEA,WAAOe,OAAP;AACH;;AA/C4B","sourcesContent":["import LocalStorageService from \"./localStorageService\";\n\nimport jwt from 'jsonwebtoken'\nimport ApiService from \"../apiservice\";\n\nexport const USUARIO_LOGADO = '_usuario_logado';\nexport const TOKEN = 'access_token';\n\nexport default class AuthService {\n\n    static isUsuarioAutenticado(){\n        try {\n            //const usuario = LocalStorageService.obterItem(USUARIO_LOGADO);\n            const token = LocalStorageService.obterItem(TOKEN);\n            const decodedToken = jwt.decode(token);\n            const expiration = decodedToken.exp\n            // var expiration = 1000;\n            // if(token){\n            //     console.log('1 token: ', token);\n            //     expiration = jwt.decode(token).exp;\n            // }\n            console.log('2 token: ', token);\n\n            const isTokenValido = Date.now() >= (expiration * 1000);\n            \n            //return usuario && usuario.id;\n            return !isTokenValido;\n        } catch (err) {\n            return false;\n        }\n    }\n\n    static removerUsuarioAutenticado(){\n        LocalStorageService.removerItem(USUARIO_LOGADO);\n        LocalStorageService.removerItem(TOKEN);\n    }\n\n    static logar(usuario, token){\n        console.log('logar');\n        LocalStorageService.adicionarItem(USUARIO_LOGADO, usuario);\n        LocalStorageService.adicionarItem(TOKEN, token);\n        ApiService.registrarToken(token);\n    }\n\n    static obterUsuarioLogado(){\n        return LocalStorageService.obterItem(USUARIO_LOGADO);\n    }\n\n    static refreshSession(){\n        const token = LocalStorageService.obterItem(TOKEN);\n        const usuario = AuthService.obterUsuarioLogado();\n        console.log('refreshSession user', usuario);\n        AuthService.logar(usuario, token);\n\n        return usuario;\n    }\n\n}"]},"metadata":{},"sourceType":"module"}