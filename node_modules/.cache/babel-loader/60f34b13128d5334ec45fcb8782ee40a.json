{"ast":null,"code":"import _classCallCheck from\"/home/clepson/Documentos/minhas-financas-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/clepson/Documentos/minhas-financas-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/clepson/Documentos/minhas-financas-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/clepson/Documentos/minhas-financas-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import ApiService from\"../apiservice\";import ErroValidacao from\"../exception/ErroValidacao\";var UsuarioService=/*#__PURE__*/function(_ApiService){_inherits(UsuarioService,_ApiService);var _super=_createSuper(UsuarioService);function UsuarioService(){_classCallCheck(this,UsuarioService);return _super.call(this,'/api/usuarios');}_createClass(UsuarioService,[{key:\"autenticar\",value:function autenticar(credenciais){return this.post('/autenticar',credenciais);}},{key:\"obterSaldoPorUsuario\",value:function obterSaldoPorUsuario(id){return this.get(\"/\".concat(id,\"/saldo\"));}},{key:\"salvar\",value:function salvar(usuario){return this.post('',usuario);}},{key:\"validar\",value:function validar(usuario){var erros=[];if(!usuario.nome){erros.push('O campo Nome é obrigatório.');}if(!usuario.email){erros.push('O campo Email é obrigatório.');}else if(!usuario.email.match(/^[a-z0-9.]+@[a-z0-9]+\\.[a-z]/)){erros.push('Informe um Email é válido.');}if(!usuario.senha||!usuario.senhaRepeticao){erros.push('Digete a senha 2x.');}else if(usuario.senha!==usuario.senhaRepeticao){erros.push('As senhas não batem.');}if(erros&&erros.length>0){throw new ErroValidacao(erros);}}}]);return UsuarioService;}(ApiService);export default UsuarioService;","map":{"version":3,"sources":["/home/clepson/Documentos/minhas-financas-app/src/app/service/usuarioService.js"],"names":["ApiService","ErroValidacao","UsuarioService","credenciais","post","id","get","usuario","erros","nome","push","email","match","senha","senhaRepeticao","length"],"mappings":"4nBAAA,MAAOA,CAAAA,UAAP,KAAuB,eAAvB,CACA,MAAOC,CAAAA,aAAP,KAA0B,4BAA1B,C,GAEMC,CAAAA,c,kHAEF,yBAAc,8DACJ,eADI,EAEb,C,qDAED,oBAAWC,WAAX,CAAuB,CACnB,MAAO,MAAKC,IAAL,CAAU,aAAV,CAAyBD,WAAzB,CAAP,CACH,C,oCAED,8BAAqBE,EAArB,CAAwB,CACpB,MAAO,MAAKC,GAAL,YAAaD,EAAb,WAAP,CACH,C,sBAED,gBAAOE,OAAP,CAAe,CACX,MAAO,MAAKH,IAAL,CAAU,EAAV,CAAcG,OAAd,CAAP,CACH,C,uBAED,iBAAQA,OAAR,CAAgB,CACZ,GAAMC,CAAAA,KAAK,CAAG,EAAd,CAEA,GAAG,CAACD,OAAO,CAACE,IAAZ,CAAiB,CACbD,KAAK,CAACE,IAAN,CAAW,6BAAX,EACH,CAED,GAAG,CAACH,OAAO,CAACI,KAAZ,CAAkB,CACdH,KAAK,CAACE,IAAN,CAAW,8BAAX,EACH,CAFD,IAEO,IAAG,CAACH,OAAO,CAACI,KAAR,CAAcC,KAAd,CAAoB,8BAApB,CAAJ,CAAwD,CAC3DJ,KAAK,CAACE,IAAN,CAAW,4BAAX,EACH,CAED,GAAG,CAACH,OAAO,CAACM,KAAT,EAAkB,CAACN,OAAO,CAACO,cAA9B,CAA6C,CACzCN,KAAK,CAACE,IAAN,CAAW,oBAAX,EACH,CAFD,IAEO,IAAGH,OAAO,CAACM,KAAR,GAAkBN,OAAO,CAACO,cAA7B,CAA4C,CAC/CN,KAAK,CAACE,IAAN,CAAW,sBAAX,EACH,CAED,GAAGF,KAAK,EAAIA,KAAK,CAACO,MAAN,CAAe,CAA3B,CAA6B,CACzB,KAAM,IAAId,CAAAA,aAAJ,CAAkBO,KAAlB,CAAN,CACH,CACJ,C,4BAxCwBR,U,EA4C7B,cAAeE,CAAAA,cAAf","sourcesContent":["import ApiService from \"../apiservice\";\nimport ErroValidacao from \"../exception/ErroValidacao\";\n\nclass UsuarioService extends ApiService {\n\n    constructor() {\n        super('/api/usuarios');\n    }\n\n    autenticar(credenciais){\n        return this.post('/autenticar', credenciais);\n    }\n\n    obterSaldoPorUsuario(id){\n        return this.get(`/${id}/saldo`);\n    }\n\n    salvar(usuario){\n        return this.post('', usuario);\n    }\n\n    validar(usuario){\n        const erros = [];\n\n        if(!usuario.nome){\n            erros.push('O campo Nome é obrigatório.');\n        }\n\n        if(!usuario.email){\n            erros.push('O campo Email é obrigatório.');\n        } else if(!usuario.email.match(/^[a-z0-9.]+@[a-z0-9]+\\.[a-z]/)){\n            erros.push('Informe um Email é válido.');\n        }\n\n        if(!usuario.senha || !usuario.senhaRepeticao){\n            erros.push('Digete a senha 2x.');\n        } else if(usuario.senha !== usuario.senhaRepeticao){\n            erros.push('As senhas não batem.');\n        }\n\n        if(erros && erros.length > 0){\n            throw new ErroValidacao(erros);\n        }\n    }\n\n}\n\nexport default UsuarioService;"]},"metadata":{},"sourceType":"module"}