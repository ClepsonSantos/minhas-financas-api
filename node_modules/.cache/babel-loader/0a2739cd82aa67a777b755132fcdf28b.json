{"ast":null,"code":"import _classCallCheck from\"/home/clepson/Documentos/minhas-financas-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/clepson/Documentos/minhas-financas-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import LocalStorageService from\"./localStorageService\";import jwt from'jsonwebtoken';import ApiService from\"../apiservice\";export var USUARIO_LOGADO='_usuario_logado';export var TOKEN='access_token';var AuthService=/*#__PURE__*/function(){function AuthService(){_classCallCheck(this,AuthService);}_createClass(AuthService,null,[{key:\"isUsuarioAutenticado\",value:function isUsuarioAutenticado(){try{//const usuario = LocalStorageService.obterItem(USUARIO_LOGADO);\nvar token=LocalStorageService.obterItem(TOKEN);var decodedToken=jwt.decode(token);var expiration=decodedToken.exp;console.log('2 token: ',token);var isTokenInvalido=Date.now()>=expiration*1000;//return usuario && usuario.id;\nreturn!isTokenInvalido;}catch(err){return false;}}},{key:\"removerUsuarioAutenticado\",value:function removerUsuarioAutenticado(){LocalStorageService.removerItem(USUARIO_LOGADO);LocalStorageService.removerItem(TOKEN);}},{key:\"logar\",value:function logar(usuario,token){console.log('logar');LocalStorageService.adicionarItem(USUARIO_LOGADO,usuario);LocalStorageService.adicionarItem(TOKEN,token);ApiService.registrarToken(token);}},{key:\"obterUsuarioLogado\",value:function obterUsuarioLogado(){return LocalStorageService.obterItem(USUARIO_LOGADO);}},{key:\"refreshSession\",value:function refreshSession(){var token=LocalStorageService.obterItem(TOKEN);var usuario=AuthService.obterUsuarioLogado();console.log('refreshSession user',usuario);AuthService.logar(usuario,token);return usuario;}}]);return AuthService;}();export{AuthService as default};","map":{"version":3,"sources":["/home/clepson/Documentos/minhas-financas-app/src/app/service/authService.js"],"names":["LocalStorageService","jwt","ApiService","USUARIO_LOGADO","TOKEN","AuthService","token","obterItem","decodedToken","decode","expiration","exp","console","log","isTokenInvalido","Date","now","err","removerItem","usuario","adicionarItem","registrarToken","obterUsuarioLogado","logar"],"mappings":"oUAAA,MAAOA,CAAAA,mBAAP,KAAgC,uBAAhC,CAEA,MAAOC,CAAAA,GAAP,KAAgB,cAAhB,CACA,MAAOC,CAAAA,UAAP,KAAuB,eAAvB,CAEA,MAAO,IAAMC,CAAAA,cAAc,CAAG,iBAAvB,CACP,MAAO,IAAMC,CAAAA,KAAK,CAAG,cAAd,C,GAEcC,CAAAA,W,oJAEjB,+BAA6B,CACzB,GAAI,CACA;AACA,GAAMC,CAAAA,KAAK,CAAGN,mBAAmB,CAACO,SAApB,CAA8BH,KAA9B,CAAd,CACA,GAAMI,CAAAA,YAAY,CAAGP,GAAG,CAACQ,MAAJ,CAAWH,KAAX,CAArB,CACA,GAAMI,CAAAA,UAAU,CAAGF,YAAY,CAACG,GAAhC,CAEAC,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAyBP,KAAzB,EAEA,GAAMQ,CAAAA,eAAe,CAAGC,IAAI,CAACC,GAAL,IAAeN,UAAU,CAAG,IAApD,CAEA;AACA,MAAO,CAACI,eAAR,CACH,CAAC,MAAOG,GAAP,CAAY,CACV,MAAO,MAAP,CACH,CACJ,C,yCAED,oCAAkC,CAC9BjB,mBAAmB,CAACkB,WAApB,CAAgCf,cAAhC,EACAH,mBAAmB,CAACkB,WAApB,CAAgCd,KAAhC,EACH,C,qBAED,eAAae,OAAb,CAAsBb,KAAtB,CAA4B,CACxBM,OAAO,CAACC,GAAR,CAAY,OAAZ,EACAb,mBAAmB,CAACoB,aAApB,CAAkCjB,cAAlC,CAAkDgB,OAAlD,EACAnB,mBAAmB,CAACoB,aAApB,CAAkChB,KAAlC,CAAyCE,KAAzC,EACAJ,UAAU,CAACmB,cAAX,CAA0Bf,KAA1B,EACH,C,kCAED,6BAA2B,CACvB,MAAON,CAAAA,mBAAmB,CAACO,SAApB,CAA8BJ,cAA9B,CAAP,CACH,C,8BAED,yBAAuB,CACnB,GAAMG,CAAAA,KAAK,CAAGN,mBAAmB,CAACO,SAApB,CAA8BH,KAA9B,CAAd,CACA,GAAMe,CAAAA,OAAO,CAAGd,WAAW,CAACiB,kBAAZ,EAAhB,CACAV,OAAO,CAACC,GAAR,CAAY,qBAAZ,CAAmCM,OAAnC,EACAd,WAAW,CAACkB,KAAZ,CAAkBJ,OAAlB,CAA2Bb,KAA3B,EAEA,MAAOa,CAAAA,OAAP,CACH,C,kCA3CgBd,W","sourcesContent":["import LocalStorageService from \"./localStorageService\";\n\nimport jwt from 'jsonwebtoken'\nimport ApiService from \"../apiservice\";\n\nexport const USUARIO_LOGADO = '_usuario_logado';\nexport const TOKEN = 'access_token';\n\nexport default class AuthService {\n\n    static isUsuarioAutenticado(){\n        try {\n            //const usuario = LocalStorageService.obterItem(USUARIO_LOGADO);\n            const token = LocalStorageService.obterItem(TOKEN);\n            const decodedToken = jwt.decode(token);\n            const expiration = decodedToken.exp\n\n            console.log('2 token: ', token);\n\n            const isTokenInvalido = Date.now() >= (expiration * 1000);\n            \n            //return usuario && usuario.id;\n            return !isTokenInvalido;\n        } catch (err) {\n            return false;\n        }\n    }\n\n    static removerUsuarioAutenticado(){\n        LocalStorageService.removerItem(USUARIO_LOGADO);\n        LocalStorageService.removerItem(TOKEN);\n    }\n\n    static logar(usuario, token){\n        console.log('logar');\n        LocalStorageService.adicionarItem(USUARIO_LOGADO, usuario);\n        LocalStorageService.adicionarItem(TOKEN, token);\n        ApiService.registrarToken(token);\n    }\n\n    static obterUsuarioLogado(){\n        return LocalStorageService.obterItem(USUARIO_LOGADO);\n    }\n\n    static refreshSession(){\n        const token = LocalStorageService.obterItem(TOKEN);\n        const usuario = AuthService.obterUsuarioLogado();\n        console.log('refreshSession user', usuario);\n        AuthService.logar(usuario, token);\n\n        return usuario;\n    }\n\n}"]},"metadata":{},"sourceType":"module"}