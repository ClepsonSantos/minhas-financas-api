{"ast":null,"code":"var _jsxFileName = \"/home/clepson/Documentos/minhas-financas-app/src/views/cadastroUsuario.js\";\nimport React from \"react\";\nimport Card from \"../components/card\";\nimport FormGroup from \"../components/form-group\";\nimport { withRouter } from 'react-router-dom';\nimport UsuarioService from \"../app/service/usuarioService\";\nimport { mensagemErro, mensagemSucesso } from \"../components/toastr\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CadastroUsuario extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      nome: '',\n      email: '',\n      senha: '',\n      senhaRepeticao: ''\n    };\n\n    this.cadastrar = () => {\n      const msgs = this.validar();\n\n      if (msgs && msgs.length > 0) {\n        msgs.forEach((msg, index) => {\n          mensagemErro(msg);\n        });\n        return false;\n      }\n\n      const usuario = {\n        nome: this.state.nome,\n        email: this.state.email,\n        senha: this.state.senha\n      };\n      this.service.salvar(usuario).then(response => {\n        mensagemSucesso('Usuário cadastrodo com sucesso! Faça o login para acessar o sistema.');\n        this.props.history.push('/login');\n      }).catch(error => {\n        mensagemErro(error.response.data);\n      });\n    };\n\n    this.cancelar = () => {\n      this.props.history.push('/login');\n    };\n\n    this.service = new UsuarioService();\n  }\n\n  validar() {\n    const msgs = [];\n\n    if (!this.state.nome) {\n      msgs.push('O campo Nome é obrigatório.');\n    }\n\n    if (!this.state.email) {\n      msgs.push('O campo Email é obrigatório.');\n    } else if (!this.state.email.match(/^[a-z0-9.]+@[a-z0-9]+\\.[a-z]/)) {\n      msgs.push('Informe um Email é válido.');\n    }\n\n    if (!this.state.senha || !this.state.senhaRepeticao) {\n      msgs.push('Digete a senha 2x.');\n    } else if (this.state.senha !== this.state.senhaRepeticao) {\n      msgs.push('As senhas não batem.');\n    }\n\n    return msgs;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      title: \"Cadastro de Usu\\xE1rio\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bs-component\",\n            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n              label: \"Nome: *\",\n              htmlFor: \"inputNome\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"inputNome\",\n                className: \"form-control\",\n                name: \"nome\",\n                onChange: e => this.setState({\n                  nome: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              label: \"Email: *\",\n              htmlFor: \"inputEmail\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"inputEmail\",\n                className: \"form-control\",\n                name: \"email\",\n                onChange: e => this.setState({\n                  email: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              label: \"Senha: *\",\n              htmlFor: \"inputSenha\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                id: \"inputSenha\",\n                className: \"form-control\",\n                name: \"senha\",\n                onChange: e => this.setState({\n                  senha: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              label: \"Repita a Senha: *\",\n              htmlFor: \"inputRepitaSenha\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                id: \"inputRepitaSenha\",\n                className: \"form-control\",\n                name: \"senha\",\n                onChange: e => this.setState({\n                  senhaRepeticao: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.cadastrar,\n              className: \"btn btn-success\",\n              children: \"Salvar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.cancelar,\n              className: \"btn btn-danger\",\n              children: \"Cancelar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(CadastroUsuario);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/clepson/Documentos/minhas-financas-app/src/views/cadastroUsuario.js"],"names":["React","Card","FormGroup","withRouter","UsuarioService","mensagemErro","mensagemSucesso","CadastroUsuario","Component","constructor","state","nome","email","senha","senhaRepeticao","cadastrar","msgs","validar","length","forEach","msg","index","usuario","service","salvar","then","response","props","history","push","catch","error","data","cancelar","match","render","e","setState","target","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,SAASC,YAAT,EAAuBC,eAAvB,QAA8C,sBAA9C;;;AAEA,MAAMC,eAAN,SAA8BP,KAAK,CAACQ,SAApC,CAA8C;AAS1CC,EAAAA,WAAW,GAAE;AACT;AADS,SAPbC,KAOa,GAPL;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,KAAK,EAAE,EAFH;AAGJC,MAAAA,KAAK,EAAE,EAHH;AAIJC,MAAAA,cAAc,EAAE;AAJZ,KAOK;;AAAA,SA4BbC,SA5Ba,GA4BD,MAAM;AACd,YAAMC,IAAI,GAAG,KAAKC,OAAL,EAAb;;AAEA,UAAGD,IAAI,IAAIA,IAAI,CAACE,MAAL,GAAc,CAAzB,EAA2B;AACvBF,QAAAA,IAAI,CAACG,OAAL,CAAa,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACzBhB,UAAAA,YAAY,CAACe,GAAD,CAAZ;AACH,SAFD;AAGA,eAAO,KAAP;AACH;;AAED,YAAME,OAAO,GAAE;AACXX,QAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IADN;AAEXC,QAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KAFP;AAGXC,QAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG;AAHP,OAAf;AAMA,WAAKU,OAAL,CAAaC,MAAb,CAAoBF,OAApB,EACKG,IADL,CACWC,QAAQ,IAAI;AACfpB,QAAAA,eAAe,CAAC,sEAAD,CAAf;AACA,aAAKqB,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACH,OAJL,EAIOC,KAJP,CAIaC,KAAK,IAAI;AACd1B,QAAAA,YAAY,CAAC0B,KAAK,CAACL,QAAN,CAAeM,IAAhB,CAAZ;AACH,OANL;AAOH,KAnDY;;AAAA,SAqDbC,QArDa,GAqDF,MAAM;AACb,WAAKN,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACH,KAvDY;;AAET,SAAKN,OAAL,GAAe,IAAInB,cAAJ,EAAf;AACH;;AAEDa,EAAAA,OAAO,GAAE;AACL,UAAMD,IAAI,GAAG,EAAb;;AAEA,QAAG,CAAC,KAAKN,KAAL,CAAWC,IAAf,EAAoB;AAChBK,MAAAA,IAAI,CAACa,IAAL,CAAU,6BAAV;AACH;;AAED,QAAG,CAAC,KAAKnB,KAAL,CAAWE,KAAf,EAAqB;AACjBI,MAAAA,IAAI,CAACa,IAAL,CAAU,8BAAV;AACH,KAFD,MAEO,IAAG,CAAC,KAAKnB,KAAL,CAAWE,KAAX,CAAiBsB,KAAjB,CAAuB,8BAAvB,CAAJ,EAA2D;AAC9DlB,MAAAA,IAAI,CAACa,IAAL,CAAU,4BAAV;AACH;;AAED,QAAG,CAAC,KAAKnB,KAAL,CAAWG,KAAZ,IAAqB,CAAC,KAAKH,KAAL,CAAWI,cAApC,EAAmD;AAC/CE,MAAAA,IAAI,CAACa,IAAL,CAAU,oBAAV;AACH,KAFD,MAEO,IAAG,KAAKnB,KAAL,CAAWG,KAAX,KAAqB,KAAKH,KAAL,CAAWI,cAAnC,EAAkD;AACrDE,MAAAA,IAAI,CAACa,IAAL,CAAU,sBAAV;AACH;;AAED,WAAOb,IAAP;AAEH;;AA+BDmB,EAAAA,MAAM,GAAE;AACJ,wBACI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC,wBAAZ;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAG,WAAjB;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,oCACI,QAAC,SAAD;AAAW,cAAA,KAAK,EAAC,SAAjB;AAA2B,cAAA,OAAO,EAAC,WAAnC;AAAA,qCACI;AAAO,gBAAA,IAAI,EAAC,MAAZ;AACQ,gBAAA,EAAE,EAAC,WADX;AAEQ,gBAAA,SAAS,EAAC,cAFlB;AAGQ,gBAAA,IAAI,EAAC,MAHb;AAIQ,gBAAA,QAAQ,EAAEC,CAAC,IAAI,KAAKC,QAAL,CAAc;AAAC1B,kBAAAA,IAAI,EAAEyB,CAAC,CAACE,MAAF,CAASC;AAAhB,iBAAd;AAJvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAQI,QAAC,SAAD;AAAW,cAAA,KAAK,EAAC,UAAjB;AAA4B,cAAA,OAAO,EAAC,YAApC;AAAA,qCACI;AAAO,gBAAA,IAAI,EAAC,MAAZ;AACQ,gBAAA,EAAE,EAAC,YADX;AAEQ,gBAAA,SAAS,EAAC,cAFlB;AAGQ,gBAAA,IAAI,EAAC,OAHb;AAIQ,gBAAA,QAAQ,EAAEH,CAAC,IAAI,KAAKC,QAAL,CAAc;AAACzB,kBAAAA,KAAK,EAAEwB,CAAC,CAACE,MAAF,CAASC;AAAjB,iBAAd;AAJvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBARJ,eAeI,QAAC,SAAD;AAAW,cAAA,KAAK,EAAC,UAAjB;AAA4B,cAAA,OAAO,EAAC,YAApC;AAAA,qCACI;AAAO,gBAAA,IAAI,EAAC,UAAZ;AACQ,gBAAA,EAAE,EAAC,YADX;AAEQ,gBAAA,SAAS,EAAC,cAFlB;AAGQ,gBAAA,IAAI,EAAC,OAHb;AAIQ,gBAAA,QAAQ,EAAEH,CAAC,IAAI,KAAKC,QAAL,CAAc;AAACxB,kBAAAA,KAAK,EAAEuB,CAAC,CAACE,MAAF,CAASC;AAAjB,iBAAd;AAJvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAfJ,eAsBI,QAAC,SAAD;AAAW,cAAA,KAAK,EAAC,mBAAjB;AAAqC,cAAA,OAAO,EAAC,kBAA7C;AAAA,qCACI;AAAO,gBAAA,IAAI,EAAC,UAAZ;AACQ,gBAAA,EAAE,EAAC,kBADX;AAEQ,gBAAA,SAAS,EAAC,cAFlB;AAGQ,gBAAA,IAAI,EAAC,OAHb;AAIQ,gBAAA,QAAQ,EAAEH,CAAC,IAAI,KAAKC,QAAL,CAAc;AAACvB,kBAAAA,cAAc,EAAEsB,CAAC,CAACE,MAAF,CAASC;AAA1B,iBAAd;AAJvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAtBJ,eA6BI;AAAA;AAAA;AAAA;AAAA,oBA7BJ,eA8BI;AAAQ,cAAA,OAAO,EAAE,KAAKxB,SAAtB;AAAiC,cAAA,SAAS,EAAC,iBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA9BJ,eA+BI;AAAQ,cAAA,OAAO,EAAE,KAAKkB,QAAtB;AAAgC,cAAA,SAAS,EAAC,gBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA/BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAyCH;;AA5GyC;;AAgH9C,oBAAe9B,UAAU,CAAEI,eAAF,CAAzB","sourcesContent":["import React from \"react\"; \nimport Card from \"../components/card\"\nimport FormGroup from \"../components/form-group\";\nimport { withRouter } from 'react-router-dom'\n\nimport UsuarioService from \"../app/service/usuarioService\";\nimport { mensagemErro, mensagemSucesso } from \"../components/toastr\";\n\nclass CadastroUsuario extends React.Component {\n\n    state = {\n        nome: '',\n        email: '',\n        senha: '',\n        senhaRepeticao: ''\n    }\n\n    constructor(){\n        super();\n        this.service = new UsuarioService();\n    }\n\n    validar(){\n        const msgs = [];\n\n        if(!this.state.nome){\n            msgs.push('O campo Nome é obrigatório.');\n        }\n\n        if(!this.state.email){\n            msgs.push('O campo Email é obrigatório.');\n        } else if(!this.state.email.match(/^[a-z0-9.]+@[a-z0-9]+\\.[a-z]/)){\n            msgs.push('Informe um Email é válido.');\n        }\n\n        if(!this.state.senha || !this.state.senhaRepeticao){\n            msgs.push('Digete a senha 2x.');\n        } else if(this.state.senha !== this.state.senhaRepeticao){\n            msgs.push('As senhas não batem.');\n        }\n\n        return msgs;\n\n    }\n\n    cadastrar = () => {\n        const msgs = this.validar();\n\n        if(msgs && msgs.length > 0){\n            msgs.forEach((msg, index) => {\n                mensagemErro(msg);\n            });\n            return false;\n        }\n\n        const usuario ={\n            nome: this.state.nome,\n            email: this.state.email,\n            senha: this.state.senha\n        }\n\n        this.service.salvar(usuario)\n            .then( response => {\n                mensagemSucesso('Usuário cadastrodo com sucesso! Faça o login para acessar o sistema.');\n                this.props.history.push('/login');\n            }).catch(error => {\n                mensagemErro(error.response.data);\n            });\n    }\n\n    cancelar = () => {\n        this.props.history.push('/login');\n    }\n\n    render(){\n        return(\n            <Card title=\"Cadastro de Usuário\" >\n                <div className=\"row\">\n                    <div className  =\"col-lg-12\">\n                        <div className=\"bs-component\">\n                            <FormGroup label=\"Nome: *\" htmlFor=\"inputNome\">\n                                <input type=\"text\"\n                                        id=\"inputNome\"\n                                        className=\"form-control\"\n                                        name=\"nome\"\n                                        onChange={e => this.setState({nome: e.target.value})} />\n                            </FormGroup>\n                            <FormGroup label=\"Email: *\" htmlFor=\"inputEmail\">\n                                <input type=\"text\"\n                                        id=\"inputEmail\"\n                                        className=\"form-control\"\n                                        name=\"email\"\n                                        onChange={e => this.setState({email: e.target.value})} />\n                            </FormGroup>\n                            <FormGroup label=\"Senha: *\" htmlFor=\"inputSenha\">\n                                <input type=\"password\"\n                                        id=\"inputSenha\"\n                                        className=\"form-control\"\n                                        name=\"senha\"\n                                        onChange={e => this.setState({senha: e.target.value})} />\n                            </FormGroup>\n                            <FormGroup label=\"Repita a Senha: *\" htmlFor=\"inputRepitaSenha\">\n                                <input type=\"password\"\n                                        id=\"inputRepitaSenha\"\n                                        className=\"form-control\"\n                                        name=\"senha\"\n                                        onChange={e => this.setState({senhaRepeticao: e.target.value})} />\n                            </FormGroup>\n                            <br />\n                            <button onClick={this.cadastrar} className=\"btn btn-success\">Salvar</button>\n                            <button onClick={this.cancelar} className=\"btn btn-danger\">Cancelar</button>\n                        </div>\n                    </div>\n                </div>\n            </Card>\n        )\n    }\n\n}\n\nexport default withRouter( CadastroUsuario );"]},"metadata":{},"sourceType":"module"}