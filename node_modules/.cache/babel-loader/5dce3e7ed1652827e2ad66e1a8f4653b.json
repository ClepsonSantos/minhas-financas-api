{"ast":null,"code":"var _jsxFileName = \"/home/clepson/Documentos/minhas-financas-app/src/main/provedorAutenticacao.js\";\nimport React from 'react';\nimport ApiService from '../app/apiservice';\nimport AuthService from '../app/service/authService';\nimport jwt from 'jsonwebtoken';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/React.createContext();\nexport const AuthConsumer = AuthContext.Consumer;\nconst AuthProvider = AuthContext.Provider;\n\nclass ProvedorAutenticacao extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      usuarioAutenticado: null,\n      isAutenticado: false\n    };\n\n    this.iniciarSessao = tokenDTO => {\n      const token = tokenDTO.token;\n      const claims = jwt.decode(token);\n      const usuario = {\n        id: claims.userid,\n        nome: claims.nome\n      };\n      ApiService.registrarToken(token);\n      AuthService.logar(usuario, token);\n      this.setState({\n        isAutenticado: true,\n        usuarioAutenticado: usuario\n      });\n    };\n\n    this.encerrarSessao = () => {\n      AuthService.removerUsuarioAutenticado();\n      this.setState({\n        isAutenticado: false,\n        usuarioAutenticado: null\n      });\n    };\n  }\n\n  render() {\n    const contexto = {\n      usuarioAutenticado: this.state.usuarioAutenticado,\n      isAutenticado: this.state.isAutenticado,\n      iniciarSessao: this.iniciarSessao,\n      encerrarSessao: this.encerrarSessao\n    };\n    return /*#__PURE__*/_jsxDEV(AuthProvider, {\n      value: contexto,\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ProvedorAutenticacao;","map":{"version":3,"sources":["/home/clepson/Documentos/minhas-financas-app/src/main/provedorAutenticacao.js"],"names":["React","ApiService","AuthService","jwt","AuthContext","createContext","AuthConsumer","Consumer","AuthProvider","Provider","ProvedorAutenticacao","Component","state","usuarioAutenticado","isAutenticado","iniciarSessao","tokenDTO","token","claims","decode","usuario","id","userid","nome","registrarToken","logar","setState","encerrarSessao","removerUsuarioAutenticado","render","contexto","props","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,GAAP,MAAgB,cAAhB;;AAEA,OAAO,MAAMC,WAAW,gBAAGJ,KAAK,CAACK,aAAN,EAApB;AACP,OAAO,MAAMC,YAAY,GAAGF,WAAW,CAACG,QAAjC;AACP,MAAMC,YAAY,GAAGJ,WAAW,CAACK,QAAjC;;AAEA,MAAMC,oBAAN,SAAmCV,KAAK,CAACW,SAAzC,CAAmD;AAAA;AAAA;AAAA,SAE/CC,KAF+C,GAEvC;AACJC,MAAAA,kBAAkB,EAAE,IADhB;AAEJC,MAAAA,aAAa,EAAE;AAFX,KAFuC;;AAAA,SAO/CC,aAP+C,GAO9BC,QAAD,IAAc;AAC1B,YAAMC,KAAK,GAAGD,QAAQ,CAACC,KAAvB;AACA,YAAMC,MAAM,GAAGf,GAAG,CAACgB,MAAJ,CAAWF,KAAX,CAAf;AACA,YAAMG,OAAO,GAAG;AACZC,QAAAA,EAAE,EAAEH,MAAM,CAACI,MADC;AAEZC,QAAAA,IAAI,EAAEL,MAAM,CAACK;AAFD,OAAhB;AAKAtB,MAAAA,UAAU,CAACuB,cAAX,CAA0BP,KAA1B;AAEAf,MAAAA,WAAW,CAACuB,KAAZ,CAAkBL,OAAlB,EAA2BH,KAA3B;AACA,WAAKS,QAAL,CAAe;AAAEZ,QAAAA,aAAa,EAAE,IAAjB;AAAuBD,QAAAA,kBAAkB,EAAEO;AAA3C,OAAf;AACH,KAnB8C;;AAAA,SAqB/CO,cArB+C,GAqB9B,MAAM;AACnBzB,MAAAA,WAAW,CAAC0B,yBAAZ;AACA,WAAKF,QAAL,CAAe;AAAEZ,QAAAA,aAAa,EAAE,KAAjB;AAAwBD,QAAAA,kBAAkB,EAAE;AAA5C,OAAf;AACH,KAxB8C;AAAA;;AA0B/CgB,EAAAA,MAAM,GAAE;AACJ,UAAMC,QAAQ,GAAG;AACbjB,MAAAA,kBAAkB,EAAE,KAAKD,KAAL,CAAWC,kBADlB;AAEbC,MAAAA,aAAa,EAAE,KAAKF,KAAL,CAAWE,aAFb;AAGbC,MAAAA,aAAa,EAAE,KAAKA,aAHP;AAIbY,MAAAA,cAAc,EAAE,KAAKA;AAJR,KAAjB;AAOA,wBACI,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEG,QAArB;AAAA,gBACK,KAAKC,KAAL,CAAWC;AADhB;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAvC8C;;AA2CnD,eAAetB,oBAAf","sourcesContent":["import React from 'react';\nimport ApiService from '../app/apiservice';\nimport AuthService from '../app/service/authService';\nimport jwt from 'jsonwebtoken';\n\nexport const AuthContext = React.createContext();\nexport const AuthConsumer = AuthContext.Consumer;\nconst AuthProvider = AuthContext.Provider;\n\nclass ProvedorAutenticacao extends React.Component {\n\n    state = {\n        usuarioAutenticado: null,\n        isAutenticado: false\n    }\n\n    iniciarSessao = (tokenDTO) => {\n        const token = tokenDTO.token;\n        const claims = jwt.decode(token);\n        const usuario = {\n            id: claims.userid,\n            nome: claims.nome\n        }\n\n        ApiService.registrarToken(token);\n\n        AuthService.logar(usuario, token);\n        this.setState( { isAutenticado: true, usuarioAutenticado: usuario } );\n    }\n\n    encerrarSessao = () => {\n        AuthService.removerUsuarioAutenticado();\n        this.setState( { isAutenticado: false, usuarioAutenticado: null} );\n    }\n\n    render(){\n        const contexto = {\n            usuarioAutenticado: this.state.usuarioAutenticado,\n            isAutenticado: this.state.isAutenticado,\n            iniciarSessao: this.iniciarSessao,\n            encerrarSessao: this.encerrarSessao\n        }\n\n        return(\n            <AuthProvider value={contexto}>\n                {this.props.children}\n            </AuthProvider>\n        );\n    }\n\n}\n\nexport default ProvedorAutenticacao;"]},"metadata":{},"sourceType":"module"}