{"version":3,"sources":["components/card.js","components/form-group.js","app/apiservice.js","app/exception/ErroValidacao.js","app/service/usuarioService.js","app/service/localStorageService.js","components/toastr.js","app/service/authService.js","main/provedorAutenticacao.js","views/login.js","views/home.js","views/cadastroUsuario.js","app/service/lancamentoService.js","components/selectMenu.js","views/lacamentos/lancamentosTable.js","views/lacamentos/consulta-lancamentos.js","views/lacamentos/cadastro-lancamentos.js","views/landingPage.js","main/rotas.js","components/navbaritem.js","components/navbar.js","main/App.js","index.js"],"names":["Card","className","this","props","title","children","React","Component","FormGroup","htmlFor","label","baseURL","process","httpClient","axios","create","withCredentials","ApiService","apiurl","console","log","url","objeto","request","post","put","delete","get","token","defaults","headers","common","ErroValidacao","mensagens","UsuarioService","credenciais","id","usuario","erros","nome","push","email","match","senha","senhaRepeticao","length","LocalStorageService","chave","valor","localStorage","setItem","JSON","stringify","item","getItem","parse","removeItem","mostrarMensagem","titulo","mensagem","tipo","toastr","mensagemErro","mensagemSucesso","options","USUARIO_LOGADO","TOKEN","AuthService","obterItem","expiration","jwt","decode","exp","Date","now","err","removerItem","adicionarItem","registrarToken","obterUsuarioLogado","logar","AuthContext","createContext","AuthConsumer","Consumer","AuthProvider","Provider","ProvedorAutenticacao","state","usuarioAutenticado","isAutenticado","isLoading","iniciarSessao","tokenDTO","claims","userid","setState","encerrarSessao","removerUsuarioAutenticado","isUsuarioAutenticado","refreshSession","previousState","contexto","value","Login","entrar","a","service","autenticar","then","response","context","data","history","e","catch","erro","prepararCadastrar","type","onChange","target","aria-describedby","placeholder","onClick","contextType","withRouter","Home","saldo","serviceUsuario","usuarioLogado","obterSaldoPorUsuario","href","role","CadastroUsuario","cadastrar","validar","forEach","msg","salvar","error","cancelar","name","LancamentoService","status","lancamento","ano","mes","descricao","lancamentoFiltro","params","lista","map","option","index","rows","lancamentos","currencyFormatter","format","locale","disabled","alterarStatus","editAction","deleteAction","scope","ConsultaLancamentos","showConfirmDialog","lancamentoDeletar","buscar","messages","consultar","resposta","editar","abrirConfirmacao","cancelarDelecao","deletar","indexOf","splice","preparaFormularioCadastro","meses","obterListaMeses","tipos","obterListaTipos","confirmDialogFooter","icon","header","visible","modal","style","width","footer","onHide","CadastroLancamentos","atualizando","handleChange","event","submit","atualizar","obterPorId","LandingPage","goToHomePage","RotaAutenticada","component","exact","render","componentProps","to","pathname","from","location","Rotas","path","landingPage","cadastroLancamentos","NavbarItem","Navbar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","deslogar","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41cf414a.chunk.js","sourcesContent":["import React from \"react\"; \n\nclass Card extends React.Component {\n\n    render(){\n        return (\n            <div className=\"card md-3\">\n                <h3 className=\"card-header\">{this.props.title}</h3>\n                <div className=\"card-body\">\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default Card;","import React from \"react\";\n\nfunction FormGroup(props){\n\n    return(\n\n        <div className=\"form-group\">\n            <label htmlFor={props.htmlFor}>{props.label}</label>\n            {props.children}\n        </div>\n\n    )\n\n}\n\nexport default FormGroup;","import axios from \"axios\";\n\nconst baseURL = process.env.REACT_APP_API_URL\n\nconst httpClient = axios.create({\n    baseURL: baseURL,\n    withCredentials: true \n    //https://minhas-financas-api.herokuapp.com/\n    //baseURL: 'https://minhas-financas-api.herokuapp.com'\n\n});\n\nclass ApiService {\n\n    constructor(apiurl){\n        console.log('baseURL: ', baseURL);\n        this.apiurl = apiurl;\n    }\n\n    static registrarToken(token){\n        if(token){\n            httpClient.defaults.headers.common['Authorization'] = `Bearer ${token}`\n        }\n    }\n\n    post(url, objeto){\n        const request = `${this.apiurl}${url}`;\n        return httpClient.post(request, objeto);\n    }\n\n    put(url, objeto){\n        const request = `${this.apiurl}${url}`;\n        return httpClient.put(request, objeto);\n    }\n\n    delete(url){\n        const request = `${this.apiurl}${url}`;\n        return httpClient.delete(request);\n    }\n\n    get(url){\n        const request = `${this.apiurl}${url}`;\n        return httpClient.get(request);\n    }\n}\n\nexport default ApiService;","function ErroValidacao(mensagens){\n    this.mensagens = mensagens;\n}\n\nexport default ErroValidacao;","import ApiService from \"../apiservice\";\nimport ErroValidacao from \"../exception/ErroValidacao\";\n\nclass UsuarioService extends ApiService {\n\n    constructor() {\n        super('/api/usuarios');\n    }\n\n    autenticar(credenciais){\n        return this.post('/autenticar', credenciais);\n    }\n\n    obterSaldoPorUsuario(id){\n        return this.get(`/${id}/saldo`);\n    }\n\n    salvar(usuario){\n        return this.post('', usuario);\n    }\n\n    validar(usuario){\n        const erros = [];\n\n        if(!usuario.nome){\n            erros.push('O campo Nome é obrigatório.');\n        }\n\n        if(!usuario.email){\n            erros.push('O campo Email é obrigatório.');\n        } else if(!usuario.email.match(/^[a-z0-9.]+@[a-z0-9]+\\.[a-z]/)){\n            erros.push('Informe um Email é válido.');\n        }\n\n        if(!usuario.senha || !usuario.senhaRepeticao){\n            erros.push('Digete a senha 2x.');\n        } else if(usuario.senha !== usuario.senhaRepeticao){\n            erros.push('As senhas não batem.');\n        }\n\n        if(erros && erros.length > 0){\n            throw new ErroValidacao(erros);\n        }\n    }\n\n}\n\nexport default UsuarioService;","export default class LocalStorageService {\n\n    static adicionarItem(chave, valor){\n        localStorage.setItem(chave, JSON.stringify(valor));\n    }\n\n    static obterItem(chave){\n        const item = localStorage.getItem(chave);\n        return JSON.parse(item);\n    }\n\n    static removerItem(chave){\n        localStorage.removeItem(chave);\n    }\n\n}","import toastr from 'toastr'\n\ntoastr.options = {\n    \"closeButton\": true,\n    \"debug\": false,\n    \"newestOnTop\": false,\n    \"progressBar\": true,\n    \"positionClass\": \"toast-top-right\",\n    \"preventDuplicates\": false,\n    \"onclick\": null,\n    \"showDuration\": \"300\",\n    \"hideDuration\": \"1000\",\n    \"timeOut\": \"5000\",\n    \"extendedTimeOut\": \"1000\",\n    \"showEasing\": \"swing\",\n    \"hideEasing\": \"linear\",\n    \"showMethod\": \"fadeIn\",\n    \"hideMethod\": \"fadeOut\"\n  }\n\nexport function mostrarMensagem(titulo, mensagem, tipo){\n    toastr[tipo](mensagem, titulo)  \n}\n\nexport function mensagemErro(mensagem){\n    mostrarMensagem('Erro', mensagem, 'error')\n}\n\nexport function mensagemSucesso(mensagem){\n    mostrarMensagem('Sucesso', mensagem, 'success')\n}\n\nexport function mensagemAlerta(mensagem){\n    mostrarMensagem('Alerta', mensagem, 'warning')\n}","import LocalStorageService from \"./localStorageService\";\n\nimport jwt from 'jsonwebtoken'\nimport ApiService from \"../apiservice\";\n\nexport const USUARIO_LOGADO = '_usuario_logado';\nexport const TOKEN = 'access_token';\n\nexport default class AuthService {\n\n    static isUsuarioAutenticado(){\n        try {\n            //const usuario = LocalStorageService.obterItem(USUARIO_LOGADO);\n            const token = LocalStorageService.obterItem(TOKEN);\n            const decodedToken = jwt.decode(token);\n            const expiration = decodedToken.exp\n\n            console.log('2 token: ', token);\n\n            const isTokenInvalido = Date.now() >= (expiration * 1000);\n            \n            //return usuario && usuario.id;\n            return !isTokenInvalido;\n        } catch (err) {\n            return false;\n        }\n    }\n\n    static removerUsuarioAutenticado(){\n        LocalStorageService.removerItem(USUARIO_LOGADO);\n        LocalStorageService.removerItem(TOKEN);\n    }\n\n    static logar(usuario, token){\n        console.log('logar');\n        LocalStorageService.adicionarItem(USUARIO_LOGADO, usuario);\n        LocalStorageService.adicionarItem(TOKEN, token);\n        ApiService.registrarToken(token);\n    }\n\n    static obterUsuarioLogado(){\n        return LocalStorageService.obterItem(USUARIO_LOGADO);\n    }\n\n    static refreshSession(){\n        const token = LocalStorageService.obterItem(TOKEN);\n        const usuario = AuthService.obterUsuarioLogado();\n        console.log('refreshSession user', usuario);\n        AuthService.logar(usuario, token);\n\n        return usuario;\n    }\n\n}","import React from 'react';\nimport ApiService from '../app/apiservice';\nimport AuthService from '../app/service/authService';\nimport jwt from 'jsonwebtoken';\n\nexport const AuthContext = React.createContext();\nexport const AuthConsumer = AuthContext.Consumer;\nconst AuthProvider = AuthContext.Provider;\n\nclass ProvedorAutenticacao extends React.Component {\n\n    state = {\n        usuarioAutenticado: null,\n        isAutenticado: false,\n        isLoading: true\n    }\n\n    iniciarSessao = (tokenDTO) => {\n        const token = tokenDTO.token;\n        console.log('iniciarSessao token: ', token)\n        const claims = jwt.decode(token);\n        const usuario = {\n            id: claims.userid,\n            nome: claims.nome\n        }\n\n        AuthService.logar(usuario, token);\n        this.setState( { isAutenticado: true, usuarioAutenticado: usuario } );\n    }\n\n    encerrarSessao = () => {\n        AuthService.removerUsuarioAutenticado();\n        this.setState( { isAutenticado: false, usuarioAutenticado: null} );\n    }\n\n    // método chamado quando entra no componente\n    componentDidMount(){\n        const isAutenticado = AuthService.isUsuarioAutenticado();\n        console.log('componentDidMount. autenticado? ', isAutenticado);\n\n        if(isAutenticado){\n            console.log('componentDidMount inside if');\n            const usuario = AuthService.refreshSession();\n\n            this.setState({\n                isAutenticado: true,\n                usuarioAutenticado: usuario,\n                isLoading: false\n            });\n        } else {\n            this.setState( previousState => {\n                return {\n                    ...previousState,\n                    isLoading: false\n                }\n            });\n        }\n    }\n\n    render(){\n\n        if(this.state.isLoading){\n            return null;\n        }\n\n        const contexto = {\n            usuarioAutenticado: this.state.usuarioAutenticado,\n            isAutenticado: this.state.isAutenticado,\n            iniciarSessao: this.iniciarSessao,\n            encerrarSessao: this.encerrarSessao\n        }\n\n        return(\n            <AuthProvider value={contexto}>\n                {this.props.children}\n            </AuthProvider>\n        );\n    }\n\n}\n\nexport default ProvedorAutenticacao;","import React from \"react\";\nimport Card from \"../components/card\";\nimport FormGroup from \"../components/form-group\";\nimport { withRouter } from \"react-router-dom\"\nimport UsuarioService from \"../app/service/usuarioService\";\nimport LocalStorageService from \"../app/service/localStorageService\";\nimport { mensagemErro } from \"../components/toastr\";\nimport { AuthContext } from '../main/provedorAutenticacao';\n\nclass Login extends React.Component {\n\n    state = {\n        email: '',\n        senha: ''\n    }\n\n    constructor(){\n        super();\n        this.service = new UsuarioService();\n    }\n\n    entrar = async () => {\n        //console.log('email: '+this.state.email);\n        //console.log('senha: '+this.state.senha);\n\n        this.service.autenticar({\n            email: this.state.email,\n            senha: this.state.senha\n        }).then(response => {\n            try {\n            //console.log(response)\n            //localStorage.setItem('_usuario_logado', JSON.stringify(response.data));\n            //LocalStorageService.adicionarItem('_usuario_logado', response.data);\n            this.context.iniciarSessao(response.data); // faz com q os dados vá para provedorAutenticacao.js\n\n            this.props.history.push('/home'); // faz com que redireciona para a página home \n            } catch(e) {\n                console.log('error', e)\n            }\n        }).catch(erro => {\n            mensagemErro(erro.response.data)\n        });\n\n        console.log('executado a requisição.')\n    }\n\n    prepararCadastrar = () => {\n        this.props.history.push('/cadastro-usuarios')\n    }\n\n    render(){\n        return(\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3\" >\n                    <div className=\"bs-docs-section\">\n                        <Card title=\"Login\" >\n                            <div className=\"row\">\n                                <div className  =\"col-lg-12\">\n                                    <div className=\"bs-component\">\n                                        <fieldset>\n                                            <FormGroup label=\"Email: *\" htmlFor=\"exampleInputEmail1\">\n                                                <input type=\"email\" \n                                                        value={this.state.email}\n                                                        onChange={(e) => this.setState({email: e.target.value})}\n                                                        className=\"form-control\" \n                                                        id=\"exampleInputEmail1\" \n                                                        aria-describedby=\"emailHelp\" placeholder=\"Digite o Email\" />\n                                            </FormGroup>\n                                            <FormGroup label=\"Senha: *\" htmlFor=\"exampleInputPassword1\">\n                                                <input type=\"password\"\n                                                        value={this.state.senha}\n                                                        onChange={(e) => this.setState({senha: e.target.value})} \n                                                        className=\"form-control\" \n                                                        id=\"exampleInputPassword1\" placeholder=\"Password\" />\n                                            </FormGroup>\n                                            <br />\n                                            <button onClick={this.entrar} className=\"btn btn-success\">\n                                                <i className=\"pi pi-sign-in\"></i>Entrar\n                                            </button>\n                                            <button onClick={this.prepararCadastrar} className=\"btn btn-danger\">\n                                                <i className=\"pi pi-plus\"></i>Cadastrar\n                                            </button>\n\n                                        </fieldset>\n                                    </div>\n                                </div>\n                            </div>\n                        </Card>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nLogin.contextType = AuthContext;\n\nexport default withRouter( Login );","import React from \"react\";\nimport LocalStorageService from \"../app/service/localStorageService\";\nimport UsuarioService from \"../app/service/usuarioService\";\nimport { AuthContext } from '../main/provedorAutenticacao';\n\nclass Home extends React.Component {\n\n    state = {\n        saldo: 0\n    }\n\n    constructor(){\n        super();\n        this.serviceUsuario = new UsuarioService();\n    }\n\n    componentDidMount(){\n\n        const usuarioLogado = this.context.usuarioAutenticado; // modo antigo: LocalStorageService.obterItem('_usuario_logado');\n\n        console.log('usuario logado> ', usuarioLogado.id)\n\n        this.serviceUsuario\n            .obterSaldoPorUsuario(usuarioLogado.id)\n            .then(response => {\n                this.setState({saldo: response.data});\n            }).catch(erro => {\n                console.log(erro.response);\n            });\n    }\n\n    render(){\n        return(\n            <div className=\"jumbotron\">\n                <h1 className=\"display-3\">Bem vindo!</h1>\n                <p className=\"lead\">Esse é seu sistema de finanças.</p>\n                <p className=\"lead\">Seu saldo para o mês atual é de R$ {this.state.saldo}</p>\n                <hr className=\"my-4\" />\n                <p>E essa é sua área administrativa, utilize um dos menus ou botões abaixo para navegar pelo sistema.</p>\n                <p className=\"lead\">\n                <a className=\"btn btn-primary btn-lg\" \n                   href=\"#/cadastro-usuarios\" \n                   role=\"button\"><i className=\"pi pi-users\"></i>\n                   Cadastrar Usuário\n                </a>\n                <a className=\"btn btn-danger btn-lg\" \n                   href=\"#/cadastro-lancamentos\" \n                   role=\"button\"><i className=\"pi pi-money-bill\"></i>  \n                   Cadastrar Lançamento\n                </a>\n                </p>\n            </div>\n        )\n    }\n\n}\n\nHome.contextType = AuthContext;\n\nexport default Home;","import React from \"react\"; \nimport Card from \"../components/card\"\nimport FormGroup from \"../components/form-group\";\nimport { withRouter } from 'react-router-dom'\n\nimport UsuarioService from \"../app/service/usuarioService\";\nimport { mensagemErro, mensagemSucesso } from \"../components/toastr\";\n\nclass CadastroUsuario extends React.Component {\n\n    state = {\n        nome: '',\n        email: '',\n        senha: '',\n        senhaRepeticao: ''\n    }\n\n    constructor(){\n        super();\n        this.service = new UsuarioService();\n    }\n\n    cadastrar = () => {\n        const {nome, email, senha, senhaRepeticao} = this.state;\n        const usuario = {nome, email, senha, senhaRepeticao};\n\n        try {\n            this.service.validar(usuario);\n        } catch (erro) {\n            const msgs = erro.mensagens;\n            msgs.forEach((msg) => {\n                mensagemErro(msg);\n            });\n            return false; // para e execução do restante do código\n        }\n\n        this.service.salvar(usuario)\n            .then( response => {\n                mensagemSucesso('Usuário cadastrodo com sucesso! Faça o login para acessar o sistema.');\n                this.props.history.push('/login');\n            }).catch(error => {\n                mensagemErro(error.response.data);\n            });\n    }\n\n    cancelar = () => {\n        this.props.history.push('/login');\n    }\n\n    render(){\n        return(\n            <Card title=\"Cadastro de Usuário\" >\n                <div className=\"row\">\n                    <div className  =\"col-lg-12\">\n                        <div className=\"bs-component\">\n                            <FormGroup label=\"Nome: *\" htmlFor=\"inputNome\">\n                                <input type=\"text\"\n                                        id=\"inputNome\"\n                                        className=\"form-control\"\n                                        name=\"nome\"\n                                        onChange={e => this.setState({nome: e.target.value})} />\n                            </FormGroup>\n                            <FormGroup label=\"Email: *\" htmlFor=\"inputEmail\">\n                                <input type=\"text\"\n                                        id=\"inputEmail\"\n                                        className=\"form-control\"\n                                        name=\"email\"\n                                        onChange={e => this.setState({email: e.target.value})} />\n                            </FormGroup>\n                            <FormGroup label=\"Senha: *\" htmlFor=\"inputSenha\">\n                                <input type=\"password\"\n                                        id=\"inputSenha\"\n                                        className=\"form-control\"\n                                        name=\"senha\"\n                                        onChange={e => this.setState({senha: e.target.value})} />\n                            </FormGroup>\n                            <FormGroup label=\"Repita a Senha: *\" htmlFor=\"inputRepitaSenha\">\n                                <input type=\"password\"\n                                        id=\"inputRepitaSenha\"\n                                        className=\"form-control\"\n                                        name=\"senha\"\n                                        onChange={e => this.setState({senhaRepeticao: e.target.value})} />\n                            </FormGroup>\n                            <br />\n                            <button onClick={this.cadastrar} className=\"btn btn-success\">\n                                <i className=\"pi pi-save\"></i>Salvar\n                            </button>\n                            <button onClick={this.cancelar} className=\"btn btn-danger\">\n                                <i className=\"pi pi-times\"></i>Cancelar\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </Card>\n        )\n    }\n\n}\n\nexport default withRouter( CadastroUsuario );","import ApiService from '../apiservice'\nimport ErroValidacao from '../exception/ErroValidacao';\n\nexport default class LancamentoService extends ApiService {\n\n    constructor(){\n        super('/api/lancamentos');\n    }\n\n    obterListaMeses(){\n        return [\n            { label: 'Selecione...', value: ''},\n            { label: 'Janeiro', value: 1},\n            { label: 'Fevereiro', value: 2},\n            { label: 'Março', value: 3},\n            { label: 'Abril', value: 4},\n            { label: 'Maio', value: 5},\n            { label: 'Junho', value: 6},\n            { label: 'Julho', value: 7},\n            { label: 'Agosto', value: 8},\n            { label: 'Setembro', value: 9},\n            { label: 'Outubro', value: 10},\n            { label: 'Novembro', value: 11},\n            { label: 'Dezembro', value: 12},\n        ];\n    }\n\n    obterListaTipos(){\n        return [\n            { label: 'Selecione...', value: ''},\n            { label: 'Despesa', value: 'DESPESA'},\n            { label: 'Receita', value: 'RECEITA'},\n        ];\n    }\n\n    alterarStatus(id, status){\n        return this.put(`/${id}/atualiza-status`, { status });\n    }\n\n    validar(lancamento){\n        const erros = [];\n\n        if(!lancamento.ano){\n            erros.push(\"Informe o Ano.\");\n        }\n\n        if(!lancamento.mes){\n            erros.push(\"Informe o Mês\");\n        }\n\n        if(!lancamento.descricao){\n            erros.push(\"Informe a Descrição\");\n        }\n\n        if(!lancamento.valor){\n            erros.push(\"Informe a Valor.\");\n        }\n\n        if(!lancamento.tipo){\n            erros.push(\"Informe a Tipo.\");\n        }\n\n        if(erros && erros.length > 0){\n            throw new ErroValidacao(erros);\n        }\n    }\n\n    obterPorId(id){\n        return this.get(`/${id}`);\n    }\n\n    salvar(lancamento){\n        return this.post('/', lancamento);\n    }\n\n    atualizar(lancamento){\n        return this.put(`/${lancamento.id}`, lancamento);\n    }\n\n    consultar(lancamentoFiltro){\n        let params = `?ano=${lancamentoFiltro.ano}`;\n    \n        if(lancamentoFiltro.mes){\n            params = `${params}&mes=${lancamentoFiltro.mes}`;\n        }\n\n        if(lancamentoFiltro.tipo){\n            params = `${params}&tipo=${lancamentoFiltro.tipo}`;\n        }\n\n        if(lancamentoFiltro.status){\n            params = `${params}&status=${lancamentoFiltro.status}`;\n        }\n\n        if(lancamentoFiltro.usuario){\n            params = `${params}&usuario=${lancamentoFiltro.usuario}`;\n        }\n\n        if(lancamentoFiltro.descricao){\n            params = `${params}&descricao=${lancamentoFiltro.descricao}`;\n        }\n\n        return this.get(params);\n    }\n\n    deletar(id){\n        return this.delete(`/${id}`);\n    }\n\n}","import React from 'react'\n\nexport default (props) => {\n\n    const options = props.lista.map( (option, index) => {\n        return(\n            <option key={index} value={option.value} >{option.label}</option>\n        )\n    });\n\n    return(\n        <select {...props}>\n            {options}\n        </select>\n    )\n\n} ","import React from \"react\";\nimport currencyFormatter  from 'currency-formatter';\n\nexport default props => {\n\n    const rows = props.lancamentos.map( lancamento => {\n        return(\n            <tr key={lancamento.id}>\n                <td>{lancamento.descricao}</td>\n                <td>{ currencyFormatter.format(lancamento.valor, {locale: 'pt-BR'}) }</td>\n                <td>{lancamento.tipo}</td>\n                <td>{lancamento.mes}</td>\n                <td>{lancamento.status}</td>\n                <td>\n                    <button type=\"button\" title=\"Efetivado\"\n                            disabled={ lancamento.status !== 'PENDENTE' }\n                            className=\"btn btn-success\"\n                            onClick={ e => props.alterarStatus(lancamento, 'EFETIVADO')}>\n                        <i className=\"pi pi-check\"></i>    \n                    </button>\n                    <button type=\"button\" title=\"Cancelado\"\n                            disabled={ lancamento.status !== 'PENDENTE' }\n                            className=\"btn btn-warning\"\n                            onClick={ e => props.alterarStatus(lancamento, 'CANCELADO')}>\n                        <i className=\"pi pi-times\"></i> \n                    </button>\n                    <button type=\"button\" title=\"Editar\"\n                            className=\"btn btn-primary\"\n                            onClick={ e => props.editAction(lancamento.id)}>\n                        <i className=\"pi pi-pencil\"></i>     \n                    </button>\n                    <button type=\"button\" title=\"Deletar\"\n                            className=\"btn btn-danger\"\n                            onClick={ e => props.deleteAction(lancamento)}>\n                        <i className=\"pi pi-trash\"></i>     \n                    </button>\n                </td>\n            </tr>\n        )\n    });\n\n    return(\n        <table className=\"table table-hover\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">Descrição</th>\n                    <th scope=\"col\">Valor</th>\n                    <th scope=\"col\">Tipo</th>\n                    <th scope=\"col\">Mês</th>\n                    <th scope=\"col\">Situação</th>\n                    <th scope=\"col\">Ações</th>\n                </tr>\n            </thead>\n            <tbody>\n                {rows}\n            </tbody>\n        </table>\n    )\n\n}","import React from \"react\";\nimport { withRouter } from 'react-router-dom'\n\nimport LancamentoService from \"../../app/service/lancamentoService\";\nimport Card from \"../../components/card\";\nimport FormGroup from \"../../components/form-group\";\nimport SelectMenu from \"../../components/selectMenu\";\nimport LancamentosTable from \"./lancamentosTable\";\nimport LocalStorageService from \"../../app/service/localStorageService\";\n\nimport * as messages from \"../../components/toastr\"\n\nimport {Dialog} from 'primereact/dialog'\nimport {Button} from 'primereact/button'\n\nclass ConsultaLancamentos extends React.Component {\n\n    state = {\n        ano: '',\n        mes: '',\n        tipo: '',\n        descricao: '',\n        showConfirmDialog: false,\n        lancamentoDeletar: {},\n        lancamentos: []\n    }\n\n    constructor(){\n        super();\n        this.service = new LancamentoService();\n    }\n\n    buscar = () => {\n        if(!this.state.ano){\n            messages.mensagemErro('O preenchimento do campo Ano é obrigatório');\n            return false;\n        }\n\n        const usuarioLogado = LocalStorageService.obterItem('_usuario_logado');\n\n        const lancamentoFiltro = {\n            ano: this.state.ano,\n            mes: this.state.mes,\n            tipo: this.state.tipo,\n            descricao: this.state.descricao,\n            usuario: usuarioLogado.id\n        }\n\n        this.service\n            .consultar(lancamentoFiltro)\n            .then( resposta => {\n                const lista = resposta.data;\n\n                if(lista < 1){\n                    messages.mensagemAlerta('Nenhum resultado encontrado.')\n                }\n\n                this.setState({lancamentos: lista});\n            }).catch( error => {\n                console.log(error)\n            });\n    }\n\n    editar = (id) => {\n        this.props.history.push(`/cadastro-lancamentos/${id}`);\n    }\n\n    abrirConfirmacao = (lancamento) => {\n        this.setState({showConfirmDialog: true, lancamentoDeletar: lancamento});\n    }\n\n    cancelarDelecao = () => {\n        this.setState({showConfirmDialog: false, lancamentoDeletar: {} })\n    }\n\n    deletar = () => {\n       this.service\n           .deletar(this.state.lancamentoDeletar.id)\n           .then(response => {\n               const lancamentos = this.state.lancamentos;\n               const index = lancamentos.indexOf(this.state.lancamentoDeletar);\n               lancamentos.splice(index, 1);\n               this.setState({lancamentos: lancamentos, showConfirmDialog: false });\n               \n               messages.mensagemSucesso('Lançamento deletado com sucesso!');\n           }).catch(error => {\n               messages.mensagemErro('Ocorreu um erro ao tentar deletar o Lançamento');\n           });\n    }\n\n    preparaFormularioCadastro = () => {\n        this.props.history.push('/cadastro-lancamentos')\n    }\n\n    alterarStatus = (lancamento, status) => {\n        this.service\n            .alterarStatus(lancamento.id, status)\n            .then( response => {\n                const lancamentos = this.state.lancamentos;\n                const index = lancamentos.indexOf(lancamento);\n                if(index !== -1){\n                    lancamento['status'] = status;\n                    lancamentos[index] = lancamento;\n                    this.setState({lancamento});\n                }\n                messages.mensagemSucesso('Status atualizado com sucesso!');\n            });\n    }\n\n    render(){\n\n        const meses = this.service.obterListaMeses();\n\n        const tipos = this.service.obterListaTipos();\n\n        // const lancamentos = [\n        //     { id: 1, descricao: 'Salário', valor: 5000, mes: 1, tipo: 'Receita', status: 'Efetivado'}\n        // ];\n\n        const confirmDialogFooter = (\n            <div>\n                <Button label=\"Confirmar\" icon=\"pi pi-check\" onClick={this.deletar} />\n                <Button label=\"Cancelar\" icon=\"pi pi-times\" onClick={this.cancelarDelecao}\n                        className=\"p-button-secondary\" />\n            </div>\n        );\n\n        return(\n            <Card title=\"Consulta Lançamentos\">\n                <div className=\"row\">\n                    <div className  =\"col-md-6\">\n                        <div className=\"bs-component\">\n                            <FormGroup htmlFor=\"InputAno\" label=\"Ano: *\">\n                                <input type=\"text\" className=\"form-control\" \n                                       id=\"InputAno\" \n                                       value={this.state.ano}\n                                       onChange={e => this.setState({ano: e.target.value})}\n                                       placeholder=\"Digite o Ano\" />                 \n                            </FormGroup>\n\n                            <FormGroup htmlFor=\"InputMes\" label=\"Mês: \">\n                                <SelectMenu id=\"InputMes\" \n                                            value={this.state.mes}\n                                            onChange={e => this.setState({mes: e.target.value})}\n                                            className=\"form-control\" \n                                            lista={meses} />\n                            </FormGroup>\n\n                            <FormGroup htmlFor=\"InputDescricao\" label=\"Descrição: \">\n                                <input type=\"text\" className=\"form-control\" \n                                       id=\"InputDescricao\" \n                                       value={this.state.descricao}\n                                       onChange={e => this.setState({descricao: e.target.value})}\n                                       placeholder=\"Digite a descrição\" />                 \n                            </FormGroup>\n\n                            <FormGroup htmlFor=\"InputTipo\" label=\"Tipo de Lançamento: \">\n                                <SelectMenu id=\"InputTipo\"\n                                            value={this.state.tipo}\n                                            onChange={e => this.setState({tipo: e.target.value})} \n                                            className=\"form-control\" \n                                            lista={tipos} />\n                            </FormGroup>\n\n                            <br />\n\n                            <button onClick={this.buscar} \n                                    type=\"button\" \n                                    className=\"btn btn-success\">\n                                    <i className=\"pi pi-search\"></i> Buscar\n                            </button>\n                            <button onClick={this.preparaFormularioCadastro} \n                                    type=\"button\" \n                                    className=\"btn btn-danger\">\n                                    <i className=\"pi pi-plus\"></i> Cadastrar\n                            </button>\n\n                        </div>\n                    </div>\n                    <br />\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <div className=\"bs-component\">\n                                <LancamentosTable lancamentos={this.state.lancamentos}\n                                                  deleteAction={this.abrirConfirmacao}\n                                                  editAction={this.editar}\n                                                  alterarStatus={this.alterarStatus} />\n                            </div>\n                        </div>\n                    </div>\n                    <div>\n                        <Dialog header=\"Confirmação\" \n                                visible={this.state.showConfirmDialog}\n                                modal={true} \n                                style={{ width: '50vw' }} \n                                footer={confirmDialogFooter}\n                                onHide={() => this.setState({showConfirmDialog: false})}>\n                            Confirma a exclusão deste lançamento?\n                        </Dialog>\n                    </div>\n                </div>\n            </Card>\n        )\n    }\n\n}\n\nexport default withRouter(ConsultaLancamentos);","import React from \"react\";\n\nimport Card from '../../components/card'\nimport FormGroup from '../../components/form-group'\nimport SelectMenu from \"../../components/selectMenu\";\n\nimport { withRouter } from 'react-router-dom'\nimport * as messages from '../../components/toastr';\n\nimport LancamentoService from \"../../app/service/lancamentoService\";\nimport LocalStorageService from \"../../app/service/localStorageService\";\n\nclass CadastroLancamentos extends React.Component {\n\n    state = {\n        id: null,\n        descricao: '',\n        valor: '',\n        mes: '',\n        ano: '',\n        tipo: '',\n        status: '',\n        usuario: null,\n        atualizando: false\n    }\n\n    constructor(){\n        super();\n        this.service = new LancamentoService();\n    }\n\n    // esse método é chamado após o método render()\n    componentDidMount(){\n        const params = this.props.match.params;\n        \n        if(params.id){\n            this.service\n                .obterPorId(params.id)\n                .then(response => {\n                    this.setState( {...response.data, atualizando: true} );\n                })\n                .catch(error => {\n                    messages.mensagemErro(error.response.data);\n                });\n        }\n    }\n\n    handleChange = (event) => {\n        const value = event.target.value;\n        const name = event.target.name;\n        \n        this.setState({ [name] : value });\n    }\n    \n    submit = () => {\n        const usuarioLogado = LocalStorageService.obterItem('_usuario_logado');\n\n        const  { descricao, valor, mes, ano, tipo } = this.state;\n        const lancamento = { descricao, valor, mes, ano, tipo, usuario: usuarioLogado.id }\n\n        try {\n            this.service.validar(lancamento);\n        } catch (erro) {\n            const mensagens = erro.mensagens;\n            mensagens.forEach(msg => messages.mensagemErro(msg));\n            return false;\n        }\n\n        this.service\n            .salvar(lancamento)\n            .then(response => {\n                this.props.history.push('/consulta-lancamentos'); // redireciona para página de consulta lançamento\n                \n                messages.mensagemSucesso('Lançamento cadastrado com sucesso!');\n            }).catch(error => {\n                messages.mensagemErro(error.response.data);\n            });\n    }\n\n    atualizar = () => {\n        const  { descricao, valor, mes, ano, tipo, id, usuario } = this.state;\n        const lancamento = { descricao, valor, mes, ano, tipo, id, usuario }\n\n        this.service\n            .salvar(lancamento)\n            .then(response => {\n                this.props.history.push('/consulta-lancamentos'); // redireciona para página de consulta lançamento\n                \n                messages.mensagemSucesso('Lançamento atualizado com sucesso!');\n            }).catch(error => {\n                messages.mensagemErro(error.response.data);\n            });\n    }\n\n    render(){\n\n        const tipos = this.service.obterListaTipos();\n        const meses = this.service.obterListaMeses();\n\n        return(\n            <Card title={ this.state.atualizando ? 'Atualização de Lançamento' : 'Cadastro de Lançamento' }>\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <FormGroup id=\"inputDescricao\" label=\"Descrição: *\">\n                            <input id=\"inputDescricao\" \n                                   type=\"text\" \n                                   className=\"form-control\"\n                                   name=\"descricao\"\n                                   value={this.state.descricao}\n                                   onChange={this.handleChange} />\n                        </FormGroup>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <FormGroup id=\"inputAno\" label=\"Ano: *\" >\n                            <input id=\"inputAno\" type=\"text\" \n                                   className=\"form-control\"\n                                   name=\"ano\"\n                                   value={this.state.ano}\n                                   onChange={this.handleChange} />\n                        </FormGroup>\n                    </div>\n                    <div className=\"col-md-6\">\n                        <FormGroup id=\"inputMes\" label=\"Mês: *\" >\n                            <SelectMenu id=\"inputMes\" \n                                        lista={meses} \n                                        className=\"form-control\"\n                                        name=\"mes\"\n                                        value={this.state.mes}\n                                        onChange={this.handleChange} />\n                        </FormGroup>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <FormGroup id=\"inputValor\" label=\"Valor: *\" >\n                            <input id=\"inputValor\" \n                                   type=\"text\" \n                                   className=\"form-control\"\n                                   name=\"valor\"\n                                   value={this.state.valor}\n                                   onChange={this.handleChange} />\n                        </FormGroup>\n                    </div>\n                    <div className=\"col-md-4\">\n                        <FormGroup id=\"inputTipo\" label=\"Tipo: *\" >\n                            <SelectMenu id=\"inputTipo\" \n                                        lista={tipos} \n                                        className=\"form-control\"\n                                        name=\"tipo\"\n                                        value={this.state.tipo}\n                                        onChange={this.handleChange} />\n                        </FormGroup>\n                    </div>\n                    <div className=\"col-md-4\">\n                        <FormGroup id=\"inputStatus\" label=\"Status: *\" >\n                            <input type=\"text\" \n                                   name=\"status\"\n                                   value={this.state.status}\n                                   onChange={this.handleChange} \n                                   className=\"form-control\"\n                                   disabled />\n                        </FormGroup>\n                    </div>\n\n\n                </div>\n\n                <br />\n\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        { this.state.atualizando ?\n                            (\n                                <button onClick={this.atualizar} \n                                        className=\"btn btn-primary\">\n                                        <i className=\"pi pi-refresh\"></i> Atualizar \n                                </button>\n                            ) : (\n                                <button onClick={this.submit} \n                                        className=\"btn btn-success\">\n                                        <i className=\"pi pi-save\"></i> Salvar\n                                </button>\n                            )\n                        }\n                        <button onClick={e => this.props.history.push('/consulta-lancamentos')} \n                                className=\"btn btn-danger\">\n                                <i className=\"pi pi-times\"></i> Cancelar\n                        </button>\n                    </div>\n                </div>\n            </Card>\n        );\n    }\n}\n\nexport default withRouter(CadastroLancamentos);","import React from \"react\";\nimport { withRouter } from 'react-router-dom'\n\nclass LandingPage extends React.Component {\n\n    goToHomePage = () => {\n        this.props.history.push('/home');\n    }\n\n    render(){\n        return(\n            <div className=\"container text-center\">\n                <h2>Bem Vindo ao sistema Minhas Finanças</h2>\n                Este é seu sistema para controle de finanças pessoais,\n                clique no botão abaixo para acessar o sistema: <br /><br />\n\n                <div className=\"col-md-4 offset-md-4\">\n                    <button style={{ width: '100%'}} \n                            className=\"btn btn-success\"\n                            onClick={this.goToHomePage}>\n                        <i className=\"pi pi-sign-in\"></i> Acessar\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(LandingPage);\n","import React from 'react'\n\nimport { Route, Switch, BrowserRouter, Redirect } from 'react-router-dom'\n\nimport Login from '../views/login'\nimport Home from '../views/home'\nimport CadastroUsuario from '../views/cadastroUsuario'\nimport ConsultaLancamentos from '../views/lacamentos/consulta-lancamentos'\nimport cadastroLancamentos from '../views/lacamentos/cadastro-lancamentos'\nimport { AuthConsumer } from '../main/provedorAutenticacao'\nimport landingPage from '../views/landingPage'\n\nfunction RotaAutenticada( { component: Component, isUsuarioAutenticado, ...props} ){\n    return(\n        <Route exact {...props} render={ (componentProps) => {\n            if(isUsuarioAutenticado){\n                return (\n                    <Component {...componentProps} />\n                );\n            } else {\n                return (\n                    <Redirect to={ {pathname : '/login', state : { from: componentProps.location} } } />\n                );\n            }\n        }} />\n    );\n}\n\nfunction Rotas(props){\n\n    return(\n\n        <BrowserRouter >\n            <Switch >\n                <Route exact path=\"/\" component={landingPage} />\n                <Route exact path=\"/login\" component={Login} />\n                <Route exact path=\"/cadastro-usuarios\" component={CadastroUsuario} />\n                \n                <RotaAutenticada isUsuarioAutenticado={props.isUsuarioAutenticado} path=\"/home\" component={Home} />\n                <RotaAutenticada isUsuarioAutenticado={props.isUsuarioAutenticado} path=\"/consulta-lancamentos\" component={ConsultaLancamentos} />\n                <RotaAutenticada isUsuarioAutenticado={props.isUsuarioAutenticado} path=\"/cadastro-lancamentos/:id?\" component={cadastroLancamentos} />\n            </Switch>\n        </BrowserRouter>\n\n    )\n\n}\n\nexport default () => (\n    <AuthConsumer>\n        { (context) => (<Rotas isUsuarioAutenticado={context.isAutenticado} />) }\n    </AuthConsumer>\n);","import React from \"react\";\n\nfunction NavbarItem( {render, ...props} ) {\n\n    if(render){\n        return(\n            <li className=\"nav-item\">\n                <a onClick={props.onClick} className=\"nav-link\" href={props.href}>{props.label}</a>\n            </li>\n        )\n    } else {\n        return false;\n    }\n\n}\n\nexport default NavbarItem;","import React from \"react\";\nimport AuthService from \"../app/service/authService\";\nimport NavbarItem from \"./navbaritem\";\nimport { AuthConsumer } from \"../main/provedorAutenticacao\";\n\nconst deslogar = () => {\n    AuthService.removerUsuarioAutenticado();\n}\n\nconst isUsuarioAutenticado = () => {\n    return AuthService.isUsuarioAutenticado();\n}\n\nfunction Navbar(props){\n\n    return(\n        <div className=\"navbar navbar-expand-lg fixed-top navbar-dark bg-primary\" >\n        <div className=\"container\">\n            <a href=\"/home\" className=\"navbar-brand\">Minhas Finanças</a>\n            <button className=\"navbar-toggler\" type=\"button\" \n                    data-toggle=\"collapse\" data-target=\"#navbarResponsive\" \n                    aria-controls=\"navbarResponsive\" aria-expanded=\"false\" \n                    aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n\n                <ul className=\"navbar-nav\">\n                    <NavbarItem render={props.isUsuarioAutenticado} href=\"/home\" label=\"Home\"/>\n                    <NavbarItem render={props.isUsuarioAutenticado} href=\"/cadastro-usuarios\" label=\"Usuários\"/>\n                    <NavbarItem render={props.isUsuarioAutenticado} href=\"/consulta-lancamentos\" label=\"Lançamento\"/>\n                    <NavbarItem render={props.isUsuarioAutenticado} onClick={props.deslogar} href=\"/login\" label=\"Sair\"/>\n                </ul>\n\n            </div>\n        </div>\n        </div>\n    )\n\n}\n\nexport default () => (\n    <AuthConsumer>\n        {(context) => (\n            <Navbar isUsuarioAutenticado={context.isAutenticado} deslogar={context.encerrarSessao} />\n        )}\n    </AuthConsumer>\n);","import React from 'react';\nimport Rotas from './rotas'\nimport Navbar from '../components/navbar';\nimport ProvedorAutenticacao from './provedorAutenticacao'\n\nimport 'toastr/build/toastr.min.js'\n\nimport 'bootswatch/dist/flatly/bootstrap.css'\nimport '../custom.css'\nimport 'toastr/build/toastr.css'\n\nimport 'primereact/resources/themes/lara-light-indigo/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\n\n// componente tipo função\n// function App() {\n//   return (\n//     <div>\n//       hello world!\n//     </div>\n//   );\n// }\n\n// componente tipo classe\nclass App extends React.Component {\n\n  render(){\n    return(\n      <ProvedorAutenticacao>\n        <Navbar />\n        <div className=\"container\">\n          <Rotas />    \n        </div>\n      </ProvedorAutenticacao>\n    )\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './main/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}