{"version":3,"sources":["components/card.js","components/form-group.js","app/apiservice.js","app/exception/ErroValidacao.js","app/service/usuarioService.js","app/service/localStorageService.js","components/toastr.js","app/service/authService.js","main/provedorAutenticacao.js","views/login.js","views/home.js","views/cadastroUsuario.js","app/service/lancamentoService.js","components/selectMenu.js","views/lacamentos/lancamentosTable.js","views/lacamentos/consulta-lancamentos.js","views/lacamentos/cadastro-lancamentos.js","main/rotas.js","components/navbaritem.js","components/navbar.js","main/App.js","index.js"],"names":["Card","className","this","props","title","children","React","Component","FormGroup","htmlFor","label","httpClient","axios","create","baseURL","ApiService","apiurl","url","objeto","request","post","put","delete","get","ErroValidacao","mensagens","UsuarioService","credenciais","id","usuario","erros","nome","push","email","match","senha","senhaRepeticao","length","LocalStorageService","chave","valor","localStorage","setItem","JSON","stringify","item","getItem","parse","removeItem","mostrarMensagem","titulo","mensagem","tipo","toastr","mensagemErro","mensagemSucesso","options","USUARIO_LOGADO","AuthService","obterItem","removerItem","adicionarItem","AuthContext","createContext","AuthConsumer","Consumer","AuthProvider","Provider","ProvedorAutenticacao","state","usuarioAutenticado","isAutenticado","iniciarSessao","logar","setState","encerrarSessao","removerUsuarioAutenticado","contexto","value","Login","entrar","a","service","autenticar","then","response","context","data","history","catch","erro","console","log","prepararCadastrar","style","position","left","type","onChange","e","target","aria-describedby","placeholder","onClick","contextType","withRouter","Home","saldo","serviceUsuario","usuarioLogado","obterSaldoPorUsuario","href","role","CadastroUsuario","cadastrar","validar","forEach","msg","salvar","error","cancelar","name","LancamentoService","status","lancamento","ano","mes","descricao","lancamentoFiltro","params","lista","map","option","index","rows","lancamentos","currencyFormatter","format","locale","disabled","alterarStatus","editAction","deleteAction","scope","ConsultaLancamentos","showConfirmDialog","lancamentoDeletar","buscar","messages","consultar","resposta","editar","abrirConfirmacao","cancelarDelecao","deletar","indexOf","splice","preparaFormularioCadastro","meses","obterListaMeses","tipos","obterListaTipos","confirmDialogFooter","icon","header","visible","modal","width","footer","onHide","CadastroLancamentos","atualizando","handleChange","event","submit","atualizar","obterPorId","RotaAutenticada","component","isUsuarioAutenticado","render","componentProps","to","pathname","from","location","Rotas","path","cadastroLancamentos","NavbarItem","Navbar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","deslogar","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7be54ba5.chunk.js","sourcesContent":["import React from \"react\"; \n\nclass Card extends React.Component {\n\n    render(){\n        return (\n            <div className=\"card md-3\">\n                <h3 className=\"card-header\">{this.props.title}</h3>\n                <div className=\"card-body\">\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default Card;","import React from \"react\";\n\nfunction FormGroup(props){\n\n    return(\n\n        <div className=\"form-group\">\n            <label htmlFor={props.htmlFor}>{props.label}</label>\n            {props.children}\n        </div>\n\n    )\n\n}\n\nexport default FormGroup;","import axios from \"axios\";\n\nconst httpClient = axios.create({\n    baseURL: 'http://localhost:8080'\n});\n\nclass ApiService {\n\n    constructor(apiurl){\n        this.apiurl = apiurl;\n    }\n\n    post(url, objeto){\n        const request = `${this.apiurl}${url}`;\n        return httpClient.post(request, objeto);\n    }\n\n    put(url, objeto){\n        const request = `${this.apiurl}${url}`;\n        return httpClient.put(request, objeto);\n    }\n\n    delete(url){\n        const request = `${this.apiurl}${url}`;\n        return httpClient.delete(request);\n    }\n\n    get(url){\n        const request = `${this.apiurl}${url}`;\n        return httpClient.get(request);\n    }\n}\n\nexport default ApiService;","function ErroValidacao(mensagens){\n    this.mensagens = mensagens;\n}\n\nexport default ErroValidacao;","import ApiService from \"../apiservice\";\nimport ErroValidacao from \"../exception/ErroValidacao\";\n\nclass UsuarioService extends ApiService {\n\n    constructor() {\n        super('/api/usuarios');\n    }\n\n    autenticar(credenciais){\n        return this.post('/autenticar', credenciais);\n    }\n\n    obterSaldoPorUsuario(id){\n        return this.get(`/${id}/saldo`);\n    }\n\n    salvar(usuario){\n        return this.post('/', usuario);\n    }\n\n    validar(usuario){\n        const erros = [];\n\n        if(!usuario.nome){\n            erros.push('O campo Nome é obrigatório.');\n        }\n\n        if(!usuario.email){\n            erros.push('O campo Email é obrigatório.');\n        } else if(!usuario.email.match(/^[a-z0-9.]+@[a-z0-9]+\\.[a-z]/)){\n            erros.push('Informe um Email é válido.');\n        }\n\n        if(!usuario.senha || !usuario.senhaRepeticao){\n            erros.push('Digete a senha 2x.');\n        } else if(usuario.senha !== usuario.senhaRepeticao){\n            erros.push('As senhas não batem.');\n        }\n\n        if(erros && erros.length > 0){\n            throw new ErroValidacao(erros);\n        }\n    }\n\n}\n\nexport default UsuarioService;","export default class LocalStorageService {\n\n    static adicionarItem(chave, valor){\n        localStorage.setItem(chave, JSON.stringify(valor));\n    }\n\n    static obterItem(chave){\n        const item = localStorage.getItem(chave);\n        return JSON.parse(item);\n    }\n\n    static removerItem(chave){\n        localStorage.removeItem(chave);\n    }\n\n}","import toastr from 'toastr'\n\ntoastr.options = {\n    \"closeButton\": true,\n    \"debug\": false,\n    \"newestOnTop\": false,\n    \"progressBar\": true,\n    \"positionClass\": \"toast-top-right\",\n    \"preventDuplicates\": false,\n    \"onclick\": null,\n    \"showDuration\": \"300\",\n    \"hideDuration\": \"1000\",\n    \"timeOut\": \"5000\",\n    \"extendedTimeOut\": \"1000\",\n    \"showEasing\": \"swing\",\n    \"hideEasing\": \"linear\",\n    \"showMethod\": \"fadeIn\",\n    \"hideMethod\": \"fadeOut\"\n  }\n\nexport function mostrarMensagem(titulo, mensagem, tipo){\n    toastr[tipo](mensagem, titulo)  \n}\n\nexport function mensagemErro(mensagem){\n    mostrarMensagem('Erro', mensagem, 'error')\n}\n\nexport function mensagemSucesso(mensagem){\n    mostrarMensagem('Sucesso', mensagem, 'success')\n}\n\nexport function mensagemAlerta(mensagem){\n    mostrarMensagem('Alerta', mensagem, 'warning')\n}","import LocalStorageService from \"./localStorageService\";\n\nexport const USUARIO_LOGADO = '_usuario_logado';\n\nexport default class AuthService {\n\n    static isUsuarioAutenticado(){\n        const usuario = LocalStorageService.obterItem(USUARIO_LOGADO);\n        return usuario && usuario.id;\n    }\n\n    static removerUsuarioAutenticado(){\n        LocalStorageService.removerItem(USUARIO_LOGADO);\n    }\n\n    static logar(usuario){\n        LocalStorageService.adicionarItem(USUARIO_LOGADO, usuario);\n    }\n\n    static obterUsuarioLogado(){\n        return LocalStorageService.obterItem(USUARIO_LOGADO);\n    }\n\n}","import React from 'react';\nimport AuthService from '../app/service/authService';\n\nexport const AuthContext = React.createContext();\nexport const AuthConsumer = AuthContext.Consumer;\nconst AuthProvider = AuthContext.Provider;\n\nclass ProvedorAutenticacao extends React.Component {\n\n    state = {\n        usuarioAutenticado: null,\n        isAutenticado: false\n    }\n\n    iniciarSessao = (usuario) => {\n        AuthService.logar(usuario);\n        this.setState( { isAutenticado: true, usuarioAutenticado: usuario } );\n    }\n\n    encerrarSessao = () => {\n        AuthService.removerUsuarioAutenticado();\n        this.setState( { isAutenticado: false, usuarioAutenticado: null} );\n    }\n\n    render(){\n        const contexto = {\n            usuarioAutenticado: this.state.usuarioAutenticado,\n            isAutenticado: this.state.isAutenticado,\n            iniciarSessao: this.iniciarSessao,\n            encerrarSessao: this.encerrarSessao\n        }\n\n        return(\n            <AuthProvider value={contexto}>\n                {this.props.children}\n            </AuthProvider>\n        );\n    }\n\n}\n\nexport default ProvedorAutenticacao;","import React from \"react\";\nimport Card from \"../components/card\";\nimport FormGroup from \"../components/form-group\";\nimport { withRouter } from \"react-router-dom\"\nimport UsuarioService from \"../app/service/usuarioService\";\nimport LocalStorageService from \"../app/service/localStorageService\";\nimport { mensagemErro } from \"../components/toastr\";\nimport { AuthContext } from '../main/provedorAutenticacao';\n\nclass Login extends React.Component {\n\n    state = {\n        email: '',\n        senha: ''\n    }\n\n    constructor(){\n        super();\n        this.service = new UsuarioService();\n    }\n\n    entrar = async () => {\n        //console.log('email: '+this.state.email);\n        //console.log('senha: '+this.state.senha);\n\n        this.service.autenticar({\n            email: this.state.email,\n            senha: this.state.senha\n        }).then(response => {\n            //console.log(response)\n            //localStorage.setItem('_usuario_logado', JSON.stringify(response.data));\n            //LocalStorageService.adicionarItem('_usuario_logado', response.data);\n            this.context.iniciarSessao(response.data); // faz com q os dados vá para provedorAutenticacao.js\n\n            this.props.history.push('/home'); // faz com que redireciona para a página home \n        }).catch(erro => {\n            mensagemErro(erro.response.data)\n        });\n\n        console.log('executado a requisição.')\n    }\n\n    prepararCadastrar = () => {\n        this.props.history.push('/cadastro-usuarios')\n    }\n\n    render(){\n        return(\n            <div className=\"row\">\n                <div className=\"col-md-6\" style={{position: 'relative', left: '300px'}} >\n                    <div className=\"bs-docs-section\">\n                        <Card title=\"Login\" >\n                            <div className=\"row\">\n                                <div className  =\"col-lg-12\">\n                                    <div className=\"bs-component\">\n                                        <fieldset>\n                                            <FormGroup label=\"Email: *\" htmlFor=\"exampleInputEmail1\">\n                                                <input type=\"email\" \n                                                        value={this.state.email}\n                                                        onChange={(e) => this.setState({email: e.target.value})}\n                                                        className=\"form-control\" \n                                                        id=\"exampleInputEmail1\" \n                                                        aria-describedby=\"emailHelp\" placeholder=\"Digite o Email\" />\n                                            </FormGroup>\n                                            <FormGroup label=\"Senha: *\" htmlFor=\"exampleInputPassword1\">\n                                                <input type=\"password\"\n                                                        value={this.state.senha}\n                                                        onChange={(e) => this.setState({senha: e.target.value})} \n                                                        className=\"form-control\" \n                                                        id=\"exampleInputPassword1\" placeholder=\"Password\" />\n                                            </FormGroup>\n                                            <br />\n                                            <button onClick={this.entrar} className=\"btn btn-success\">\n                                                <i className=\"pi pi-sign-in\"></i>Entrar\n                                            </button>\n                                            <button onClick={this.prepararCadastrar} className=\"btn btn-danger\">\n                                                <i className=\"pi pi-plus\"></i>Cadastrar\n                                            </button>\n\n                                        </fieldset>\n                                    </div>\n                                </div>\n                            </div>\n                        </Card>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nLogin.contextType = AuthContext;\n\nexport default withRouter( Login );","import React from \"react\";\nimport LocalStorageService from \"../app/service/localStorageService\";\nimport UsuarioService from \"../app/service/usuarioService\";\nimport { AuthContext } from '../main/provedorAutenticacao';\n\nclass Home extends React.Component {\n\n    state = {\n        saldo: 0\n    }\n\n    constructor(){\n        super();\n        this.serviceUsuario = new UsuarioService();\n    }\n\n    componentDidMount(){\n\n        const usuarioLogado = this.context.usuarioAutenticado; // modo antigo: LocalStorageService.obterItem('_usuario_logado');\n\n        console.log('usuario logado> ', usuarioLogado.id)\n\n        this.serviceUsuario\n            .obterSaldoPorUsuario(usuarioLogado.id)\n            .then(response => {\n                this.setState({saldo: response.data});\n            }).catch(erro => {\n                console.log(erro.response);\n            });\n    }\n\n    render(){\n        return(\n            <div className=\"jumbotron\">\n                <h1 className=\"display-3\">Bem vindo!</h1>\n                <p className=\"lead\">Esse é seu sistema de finanças.</p>\n                <p className=\"lead\">Seu saldo para o mês atual é de R$ {this.state.saldo}</p>\n                <hr className=\"my-4\" />\n                <p>E essa é sua área administrativa, utilize um dos menus ou botões abaixo para navegar pelo sistema.</p>\n                <p className=\"lead\">\n                <a className=\"btn btn-primary btn-lg\" \n                   href=\"#/cadastro-usuarios\" \n                   role=\"button\"><i className=\"pi pi-users\"></i>\n                   Cadastrar Usuário\n                </a>\n                <a className=\"btn btn-danger btn-lg\" \n                   href=\"#/cadastro-lancamentos\" \n                   role=\"button\"><i className=\"pi pi-money-bill\"></i>  \n                   Cadastrar Lançamento\n                </a>\n                </p>\n            </div>\n        )\n    }\n\n}\n\nHome.contextType = AuthContext;\n\nexport default Home;","import React from \"react\"; \nimport Card from \"../components/card\"\nimport FormGroup from \"../components/form-group\";\nimport { withRouter } from 'react-router-dom'\n\nimport UsuarioService from \"../app/service/usuarioService\";\nimport { mensagemErro, mensagemSucesso } from \"../components/toastr\";\n\nclass CadastroUsuario extends React.Component {\n\n    state = {\n        nome: '',\n        email: '',\n        senha: '',\n        senhaRepeticao: ''\n    }\n\n    constructor(){\n        super();\n        this.service = new UsuarioService();\n    }\n\n    cadastrar = () => {\n        const {nome, email, senha, senhaRepeticao} = this.state;\n        const usuario = {nome, email, senha, senhaRepeticao};\n\n        try {\n            this.service.validar(usuario);\n        } catch (erro) {\n            const msgs = erro.mensagens;\n            msgs.forEach((msg) => {\n                mensagemErro(msg);\n            });\n            return false; // para e execução do restante do código\n        }\n\n        this.service.salvar(usuario)\n            .then( response => {\n                mensagemSucesso('Usuário cadastrodo com sucesso! Faça o login para acessar o sistema.');\n                this.props.history.push('/login');\n            }).catch(error => {\n                mensagemErro(error.response.data);\n            });\n    }\n\n    cancelar = () => {\n        this.props.history.push('/login');\n    }\n\n    render(){\n        return(\n            <Card title=\"Cadastro de Usuário\" >\n                <div className=\"row\">\n                    <div className  =\"col-lg-12\">\n                        <div className=\"bs-component\">\n                            <FormGroup label=\"Nome: *\" htmlFor=\"inputNome\">\n                                <input type=\"text\"\n                                        id=\"inputNome\"\n                                        className=\"form-control\"\n                                        name=\"nome\"\n                                        onChange={e => this.setState({nome: e.target.value})} />\n                            </FormGroup>\n                            <FormGroup label=\"Email: *\" htmlFor=\"inputEmail\">\n                                <input type=\"text\"\n                                        id=\"inputEmail\"\n                                        className=\"form-control\"\n                                        name=\"email\"\n                                        onChange={e => this.setState({email: e.target.value})} />\n                            </FormGroup>\n                            <FormGroup label=\"Senha: *\" htmlFor=\"inputSenha\">\n                                <input type=\"password\"\n                                        id=\"inputSenha\"\n                                        className=\"form-control\"\n                                        name=\"senha\"\n                                        onChange={e => this.setState({senha: e.target.value})} />\n                            </FormGroup>\n                            <FormGroup label=\"Repita a Senha: *\" htmlFor=\"inputRepitaSenha\">\n                                <input type=\"password\"\n                                        id=\"inputRepitaSenha\"\n                                        className=\"form-control\"\n                                        name=\"senha\"\n                                        onChange={e => this.setState({senhaRepeticao: e.target.value})} />\n                            </FormGroup>\n                            <br />\n                            <button onClick={this.cadastrar} className=\"btn btn-success\">\n                                <i className=\"pi pi-save\"></i>Salvar\n                            </button>\n                            <button onClick={this.cancelar} className=\"btn btn-danger\">\n                                <i className=\"pi pi-times\"></i>Cancelar\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </Card>\n        )\n    }\n\n}\n\nexport default withRouter( CadastroUsuario );","import ApiService from '../apiservice'\nimport ErroValidacao from '../exception/ErroValidacao';\n\nexport default class LancamentoService extends ApiService {\n\n    constructor(){\n        super('/api/lancamentos');\n    }\n\n    obterListaMeses(){\n        return [\n            { label: 'Selecione...', value: ''},\n            { label: 'Janeiro', value: 1},\n            { label: 'Fevereiro', value: 2},\n            { label: 'Março', value: 3},\n            { label: 'Abril', value: 4},\n            { label: 'Maio', value: 5},\n            { label: 'Junho', value: 6},\n            { label: 'Julho', value: 7},\n            { label: 'Agosto', value: 8},\n            { label: 'Setembro', value: 9},\n            { label: 'Outubro', value: 10},\n            { label: 'Novembro', value: 11},\n            { label: 'Dezembro', value: 12},\n        ];\n    }\n\n    obterListaTipos(){\n        return [\n            { label: 'Selecione...', value: ''},\n            { label: 'Despesa', value: 'DESPESA'},\n            { label: 'Receita', value: 'RECEITA'},\n        ];\n    }\n\n    alterarStatus(id, status){\n        return this.put(`/${id}/atualiza-status`, { status });\n    }\n\n    validar(lancamento){\n        const erros = [];\n\n        if(!lancamento.ano){\n            erros.push(\"Informe o Ano.\");\n        }\n\n        if(!lancamento.mes){\n            erros.push(\"Informe o Mês\");\n        }\n\n        if(!lancamento.descricao){\n            erros.push(\"Informe a Descrição\");\n        }\n\n        if(!lancamento.valor){\n            erros.push(\"Informe a Valor.\");\n        }\n\n        if(!lancamento.tipo){\n            erros.push(\"Informe a Tipo.\");\n        }\n\n        if(erros && erros.length > 0){\n            throw new ErroValidacao(erros);\n        }\n    }\n\n    obterPorId(id){\n        return this.get(`/${id}`);\n    }\n\n    salvar(lancamento){\n        return this.post('/', lancamento);\n    }\n\n    atualizar(lancamento){\n        return this.put(`/${lancamento.id}`, lancamento);\n    }\n\n    consultar(lancamentoFiltro){\n        let params = `?ano=${lancamentoFiltro.ano}`;\n    \n        if(lancamentoFiltro.mes){\n            params = `${params}&mes=${lancamentoFiltro.mes}`;\n        }\n\n        if(lancamentoFiltro.tipo){\n            params = `${params}&tipo=${lancamentoFiltro.tipo}`;\n        }\n\n        if(lancamentoFiltro.status){\n            params = `${params}&status=${lancamentoFiltro.status}`;\n        }\n\n        if(lancamentoFiltro.usuario){\n            params = `${params}&usuario=${lancamentoFiltro.usuario}`;\n        }\n\n        if(lancamentoFiltro.descricao){\n            params = `${params}&descricao=${lancamentoFiltro.descricao}`;\n        }\n\n        return this.get(params);\n    }\n\n    deletar(id){\n        return this.delete(`/${id}`);\n    }\n\n}","import React from 'react'\n\nexport default (props) => {\n\n    const options = props.lista.map( (option, index) => {\n        return(\n            <option key={index} value={option.value} >{option.label}</option>\n        )\n    });\n\n    return(\n        <select {...props}>\n            {options}\n        </select>\n    )\n\n} ","import React from \"react\";\nimport currencyFormatter  from 'currency-formatter';\n\nexport default props => {\n\n    const rows = props.lancamentos.map( lancamento => {\n        return(\n            <tr key={lancamento.id}>\n                <td>{lancamento.descricao}</td>\n                <td>{ currencyFormatter.format(lancamento.valor, {locale: 'pt-BR'}) }</td>\n                <td>{lancamento.tipo}</td>\n                <td>{lancamento.mes}</td>\n                <td>{lancamento.status}</td>\n                <td>\n                    <button type=\"button\" title=\"Efetivado\"\n                            disabled={ lancamento.status !== 'PENDENTE' }\n                            className=\"btn btn-success\"\n                            onClick={ e => props.alterarStatus(lancamento, 'EFETIVADO')}>\n                        <i className=\"pi pi-check\"></i>    \n                    </button>\n                    <button type=\"button\" title=\"Cancelado\"\n                            disabled={ lancamento.status !== 'PENDENTE' }\n                            className=\"btn btn-warning\"\n                            onClick={ e => props.alterarStatus(lancamento, 'CANCELADO')}>\n                        <i className=\"pi pi-times\"></i> \n                    </button>\n                    <button type=\"button\" title=\"Editar\"\n                            className=\"btn btn-primary\"\n                            onClick={ e => props.editAction(lancamento.id)}>\n                        <i className=\"pi pi-pencil\"></i>     \n                    </button>\n                    <button type=\"button\" title=\"Deletar\"\n                            className=\"btn btn-danger\"\n                            onClick={ e => props.deleteAction(lancamento)}>\n                        <i className=\"pi pi-trash\"></i>     \n                    </button>\n                </td>\n            </tr>\n        )\n    });\n\n    return(\n        <table className=\"table table-hover\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">Descrição</th>\n                    <th scope=\"col\">Valor</th>\n                    <th scope=\"col\">Tipo</th>\n                    <th scope=\"col\">Mês</th>\n                    <th scope=\"col\">Situação</th>\n                    <th scope=\"col\">Ações</th>\n                </tr>\n            </thead>\n            <tbody>\n                {rows}\n            </tbody>\n        </table>\n    )\n\n}","import React from \"react\";\nimport { withRouter } from 'react-router-dom'\n\nimport LancamentoService from \"../../app/service/lancamentoService\";\nimport Card from \"../../components/card\";\nimport FormGroup from \"../../components/form-group\";\nimport SelectMenu from \"../../components/selectMenu\";\nimport LancamentosTable from \"./lancamentosTable\";\nimport LocalStorageService from \"../../app/service/localStorageService\";\n\nimport * as messages from \"../../components/toastr\"\n\nimport {Dialog} from 'primereact/dialog'\nimport {Button} from 'primereact/button'\n\nclass ConsultaLancamentos extends React.Component {\n\n    state = {\n        ano: '',\n        mes: '',\n        tipo: '',\n        descricao: '',\n        showConfirmDialog: false,\n        lancamentoDeletar: {},\n        lancamentos: []\n    }\n\n    constructor(){\n        super();\n        this.service = new LancamentoService();\n    }\n\n    buscar = () => {\n        if(!this.state.ano){\n            messages.mensagemErro('O preenchimento do campo Ano é obrigatório');\n            return false;\n        }\n\n        const usuarioLogado = LocalStorageService.obterItem('_usuario_logado');\n\n        const lancamentoFiltro = {\n            ano: this.state.ano,\n            mes: this.state.mes,\n            tipo: this.state.tipo,\n            descricao: this.state.descricao,\n            usuario: usuarioLogado.id\n        }\n\n        this.service\n            .consultar(lancamentoFiltro)\n            .then( resposta => {\n                const lista = resposta.data;\n\n                if(lista < 1){\n                    messages.mensagemAlerta('Nenhum resultado encontrado.')\n                }\n\n                this.setState({lancamentos: lista});\n            }).catch( error => {\n                console.log(error)\n            });\n    }\n\n    editar = (id) => {\n        this.props.history.push(`/cadastro-lancamentos/${id}`);\n    }\n\n    abrirConfirmacao = (lancamento) => {\n        this.setState({showConfirmDialog: true, lancamentoDeletar: lancamento});\n    }\n\n    cancelarDelecao = () => {\n        this.setState({showConfirmDialog: false, lancamentoDeletar: {} })\n    }\n\n    deletar = () => {\n       this.service\n           .deletar(this.state.lancamentoDeletar.id)\n           .then(response => {\n               const lancamentos = this.state.lancamentos;\n               const index = lancamentos.indexOf(this.state.lancamentoDeletar);\n               lancamentos.splice(index, 1);\n               this.setState({lancamentos: lancamentos, showConfirmDialog: false });\n               \n               messages.mensagemSucesso('Lançamento deletado com sucesso!');\n           }).catch(error => {\n               messages.mensagemErro('Ocorreu um erro ao tentar deletar o Lançamento');\n           });\n    }\n\n    preparaFormularioCadastro = () => {\n        this.props.history.push('/cadastro-lancamentos')\n    }\n\n    alterarStatus = (lancamento, status) => {\n        this.service\n            .alterarStatus(lancamento.id, status)\n            .then( response => {\n                const lancamentos = this.state.lancamentos;\n                const index = lancamentos.indexOf(lancamento);\n                if(index !== -1){\n                    lancamento['status'] = status;\n                    lancamentos[index] = lancamento;\n                    this.setState({lancamento});\n                }\n                messages.mensagemSucesso('Status atualizado com sucesso!');\n            });\n    }\n\n    render(){\n\n        const meses = this.service.obterListaMeses();\n\n        const tipos = this.service.obterListaTipos();\n\n        // const lancamentos = [\n        //     { id: 1, descricao: 'Salário', valor: 5000, mes: 1, tipo: 'Receita', status: 'Efetivado'}\n        // ];\n\n        const confirmDialogFooter = (\n            <div>\n                <Button label=\"Confirmar\" icon=\"pi pi-check\" onClick={this.deletar} />\n                <Button label=\"Cancelar\" icon=\"pi pi-times\" onClick={this.cancelarDelecao}\n                        className=\"p-button-secondary\" />\n            </div>\n        );\n\n        return(\n            <Card title=\"Consulta Lançamentos\">\n                <div className=\"row\">\n                    <div className  =\"col-md-6\">\n                        <div className=\"bs-component\">\n                            <FormGroup htmlFor=\"InputAno\" label=\"Ano: *\">\n                                <input type=\"text\" className=\"form-control\" \n                                       id=\"InputAno\" \n                                       value={this.state.ano}\n                                       onChange={e => this.setState({ano: e.target.value})}\n                                       placeholder=\"Digite o Ano\" />                 \n                            </FormGroup>\n\n                            <FormGroup htmlFor=\"InputMes\" label=\"Mês: \">\n                                <SelectMenu id=\"InputMes\" \n                                            value={this.state.mes}\n                                            onChange={e => this.setState({mes: e.target.value})}\n                                            className=\"form-control\" \n                                            lista={meses} />\n                            </FormGroup>\n\n                            <FormGroup htmlFor=\"InputDescricao\" label=\"Descrição: \">\n                                <input type=\"text\" className=\"form-control\" \n                                       id=\"InputDescricao\" \n                                       value={this.state.descricao}\n                                       onChange={e => this.setState({descricao: e.target.value})}\n                                       placeholder=\"Digite a descrição\" />                 \n                            </FormGroup>\n\n                            <FormGroup htmlFor=\"InputTipo\" label=\"Tipo de Lançamento: \">\n                                <SelectMenu id=\"InputTipo\"\n                                            value={this.state.tipo}\n                                            onChange={e => this.setState({tipo: e.target.value})} \n                                            className=\"form-control\" \n                                            lista={tipos} />\n                            </FormGroup>\n\n                            <br />\n\n                            <button onClick={this.buscar} \n                                    type=\"button\" \n                                    className=\"btn btn-success\">\n                                    <i className=\"pi pi-search\"></i> Buscar\n                            </button>\n                            <button onClick={this.preparaFormularioCadastro} \n                                    type=\"button\" \n                                    className=\"btn btn-danger\">\n                                    <i className=\"pi pi-plus\"></i> Cadastrar\n                            </button>\n\n                        </div>\n                    </div>\n                    <br />\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <div className=\"bs-component\">\n                                <LancamentosTable lancamentos={this.state.lancamentos}\n                                                  deleteAction={this.abrirConfirmacao}\n                                                  editAction={this.editar}\n                                                  alterarStatus={this.alterarStatus} />\n                            </div>\n                        </div>\n                    </div>\n                    <div>\n                        <Dialog header=\"Confirmação\" \n                                visible={this.state.showConfirmDialog}\n                                modal={true} \n                                style={{ width: '50vw' }} \n                                footer={confirmDialogFooter}\n                                onHide={() => this.setState({showConfirmDialog: false})}>\n                            Confirma a exclusão deste lançamento?\n                        </Dialog>\n                    </div>\n                </div>\n            </Card>\n        )\n    }\n\n}\n\nexport default withRouter(ConsultaLancamentos);","import React from \"react\";\n\nimport Card from '../../components/card'\nimport FormGroup from '../../components/form-group'\nimport SelectMenu from \"../../components/selectMenu\";\n\nimport { withRouter } from 'react-router-dom'\nimport * as messages from '../../components/toastr';\n\nimport LancamentoService from \"../../app/service/lancamentoService\";\nimport LocalStorageService from \"../../app/service/localStorageService\";\n\nclass CadastroLancamentos extends React.Component {\n\n    state = {\n        id: null,\n        descricao: '',\n        valor: '',\n        mes: '',\n        ano: '',\n        tipo: '',\n        status: '',\n        usuario: null,\n        atualizando: false\n    }\n\n    constructor(){\n        super();\n        this.service = new LancamentoService();\n    }\n\n    // esse método é chamado após o método render()\n    componentDidMount(){\n        const params = this.props.match.params;\n        \n        if(params.id){\n            this.service\n                .obterPorId(params.id)\n                .then(response => {\n                    this.setState( {...response.data, atualizando: true} );\n                })\n                .catch(error => {\n                    messages.mensagemErro(error.response.data);\n                });\n        }\n    }\n\n    handleChange = (event) => {\n        const value = event.target.value;\n        const name = event.target.name;\n        \n        this.setState({ [name] : value });\n    }\n    \n    submit = () => {\n        const usuarioLogado = LocalStorageService.obterItem('_usuario_logado');\n\n        const  { descricao, valor, mes, ano, tipo } = this.state;\n        const lancamento = { descricao, valor, mes, ano, tipo, usuario: usuarioLogado.id }\n\n        try {\n            this.service.validar(lancamento);\n        } catch (erro) {\n            const mensagens = erro.mensagens;\n            mensagens.forEach(msg => messages.mensagemErro(msg));\n            return false;\n        }\n\n        this.service\n            .salvar(lancamento)\n            .then(response => {\n                this.props.history.push('/consulta-lancamentos'); // redireciona para página de consulta lançamento\n                \n                messages.mensagemSucesso('Lançamento cadastrado com sucesso!');\n            }).catch(error => {\n                messages.mensagemErro(error.response.data);\n            });\n    }\n\n    atualizar = () => {\n        const  { descricao, valor, mes, ano, tipo, id, usuario } = this.state;\n        const lancamento = { descricao, valor, mes, ano, tipo, id, usuario }\n\n        this.service\n            .salvar(lancamento)\n            .then(response => {\n                this.props.history.push('/consulta-lancamentos'); // redireciona para página de consulta lançamento\n                \n                messages.mensagemSucesso('Lançamento atualizado com sucesso!');\n            }).catch(error => {\n                messages.mensagemErro(error.response.data);\n            });\n    }\n\n    render(){\n\n        const tipos = this.service.obterListaTipos();\n        const meses = this.service.obterListaMeses();\n\n        return(\n            <Card title={ this.state.atualizando ? 'Atualização de Lançamento' : 'Cadastro de Lançamento' }>\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <FormGroup id=\"inputDescricao\" label=\"Descrição: *\">\n                            <input id=\"inputDescricao\" \n                                   type=\"text\" \n                                   className=\"form-control\"\n                                   name=\"descricao\"\n                                   value={this.state.descricao}\n                                   onChange={this.handleChange} />\n                        </FormGroup>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <FormGroup id=\"inputAno\" label=\"Ano: *\" >\n                            <input id=\"inputAno\" type=\"text\" \n                                   className=\"form-control\"\n                                   name=\"ano\"\n                                   value={this.state.ano}\n                                   onChange={this.handleChange} />\n                        </FormGroup>\n                    </div>\n                    <div className=\"col-md-6\">\n                        <FormGroup id=\"inputMes\" label=\"Mês: *\" >\n                            <SelectMenu id=\"inputMes\" \n                                        lista={meses} \n                                        className=\"form-control\"\n                                        name=\"mes\"\n                                        value={this.state.mes}\n                                        onChange={this.handleChange} />\n                        </FormGroup>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <FormGroup id=\"inputValor\" label=\"Valor: *\" >\n                            <input id=\"inputValor\" \n                                   type=\"text\" \n                                   className=\"form-control\"\n                                   name=\"valor\"\n                                   value={this.state.valor}\n                                   onChange={this.handleChange} />\n                        </FormGroup>\n                    </div>\n                    <div className=\"col-md-4\">\n                        <FormGroup id=\"inputTipo\" label=\"Tipo: *\" >\n                            <SelectMenu id=\"inputTipo\" \n                                        lista={tipos} \n                                        className=\"form-control\"\n                                        name=\"tipo\"\n                                        value={this.state.tipo}\n                                        onChange={this.handleChange} />\n                        </FormGroup>\n                    </div>\n                    <div className=\"col-md-4\">\n                        <FormGroup id=\"inputStatus\" label=\"Status: *\" >\n                            <input type=\"text\" \n                                   name=\"status\"\n                                   value={this.state.status}\n                                   onChange={this.handleChange} \n                                   className=\"form-control\"\n                                   disabled />\n                        </FormGroup>\n                    </div>\n\n\n                </div>\n\n                <br />\n\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        { this.state.atualizando ?\n                            (\n                                <button onClick={this.atualizar} \n                                        className=\"btn btn-primary\">\n                                        <i className=\"pi pi-refresh\"></i> Atualizar \n                                </button>\n                            ) : (\n                                <button onClick={this.submit} \n                                        className=\"btn btn-success\">\n                                        <i className=\"pi pi-save\"></i> Salvar\n                                </button>\n                            )\n                        }\n                        <button onClick={e => this.props.history.push('/consulta-lancamentos')} \n                                className=\"btn btn-danger\">\n                                <i className=\"pi pi-times\"></i> Cancelar\n                        </button>\n                    </div>\n                </div>\n            </Card>\n        );\n    }\n}\n\nexport default withRouter(CadastroLancamentos);","import React from 'react'\n\nimport { Route, Switch, HashRouter, Redirect } from 'react-router-dom'\n\nimport Login from '../views/login'\nimport Home from '../views/home'\nimport CadastroUsuario from '../views/cadastroUsuario'\nimport ConsultaLancamentos from '../views/lacamentos/consulta-lancamentos'\nimport cadastroLancamentos from '../views/lacamentos/cadastro-lancamentos'\nimport { AuthConsumer } from '../main/provedorAutenticacao';\n\nfunction RotaAutenticada( { component: Component, isUsuarioAutenticado, ...props} ){\n    return(\n        <Route {...props} render={ (componentProps) => {\n            if(isUsuarioAutenticado){\n                return (\n                    <Component {...componentProps} />\n                );\n            } else {\n                return (\n                    <Redirect to={ {pathname : '/login', state : { from: componentProps.location} } } />\n                );\n            }\n        }} />\n    );\n}\n\nfunction Rotas(props){\n\n    return(\n\n        <HashRouter >\n            <Switch >\n                <Route path=\"/login\" component={Login} />\n                <Route path=\"/cadastro-usuarios\" component={CadastroUsuario} />\n                \n                <RotaAutenticada isUsuarioAutenticado={props.isUsuarioAutenticado} path=\"/home\" component={Home} />\n                <RotaAutenticada isUsuarioAutenticado={props.isUsuarioAutenticado} path=\"/consulta-lancamentos\" component={ConsultaLancamentos} />\n                <RotaAutenticada isUsuarioAutenticado={props.isUsuarioAutenticado} path=\"/cadastro-lancamentos/:id?\" component={cadastroLancamentos} />\n            </Switch>\n        </HashRouter>\n\n    )\n\n}\n\nexport default () => (\n    <AuthConsumer>\n        { (context) => (<Rotas isUsuarioAutenticado={context.isAutenticado} />) }\n    </AuthConsumer>\n);","import React from \"react\";\n\nfunction NavbarItem( {render, ...props} ) {\n\n    if(render){\n        return(\n            <li className=\"nav-item\">\n                <a onClick={props.onClick} className=\"nav-link\" href={props.href}>{props.label}</a>\n            </li>\n        )\n    } else {\n        return false;\n    }\n\n}\n\nexport default NavbarItem;","import React from \"react\";\nimport AuthService from \"../app/service/authService\";\nimport NavbarItem from \"./navbaritem\";\nimport { AuthConsumer } from \"../main/provedorAutenticacao\";\n\nconst deslogar = () => {\n    AuthService.removerUsuarioAutenticado();\n}\n\nconst isUsuarioAutenticado = () => {\n    return AuthService.isUsuarioAutenticado();\n}\n\nfunction Navbar(props){\n\n    return(\n        <div className=\"navbar navbar-expand-lg fixed-top navbar-dark bg-primary\" >\n        <div className=\"container\">\n            <a href=\"#/home\" className=\"navbar-brand\">Minhas Finanças</a>\n            <button className=\"navbar-toggler\" type=\"button\" \n                    data-toggle=\"collapse\" data-target=\"#navbarResponsive\" \n                    aria-controls=\"navbarResponsive\" aria-expanded=\"false\" \n                    aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n\n                <ul className=\"navbar-nav\">\n                    <NavbarItem render={props.isUsuarioAutenticado} href=\"#/home\" label=\"Home\"/>\n                    <NavbarItem render={props.isUsuarioAutenticado} href=\"#/cadastro-usuarios\" label=\"Usuários\"/>\n                    <NavbarItem render={props.isUsuarioAutenticado} href=\"#/consulta-lancamentos\" label=\"Lançamento\"/>\n                    <NavbarItem render={props.isUsuarioAutenticado} onClick={props.deslogar} href=\"#/login\" label=\"Sair\"/>\n                </ul>\n\n            </div>\n        </div>\n        </div>\n    )\n\n}\n\nexport default () => (\n    <AuthConsumer>\n        {(context) => (\n            <Navbar isUsuarioAutenticado={context.isAutenticado} deslogar={context.encerrarSessao} />\n        )}\n    </AuthConsumer>\n);","import React from 'react';\nimport Rotas from './rotas'\nimport Navbar from '../components/navbar';\nimport ProvedorAutenticacao from './provedorAutenticacao'\n\nimport 'toastr/build/toastr.min.js'\n\nimport 'bootswatch/dist/flatly/bootstrap.css'\nimport '../custom.css'\nimport 'toastr/build/toastr.css'\n\nimport 'primereact/resources/themes/lara-light-indigo/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\n\n// componente tipo função\n// function App() {\n//   return (\n//     <div>\n//       hello world!\n//     </div>\n//   );\n// }\n\n// componente tipo classe\nclass App extends React.Component {\n\n  render(){\n    return(\n      <ProvedorAutenticacao>\n        <Navbar />\n        <div className=\"container\">\n          <Rotas />    \n        </div>\n      </ProvedorAutenticacao>\n    )\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './main/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}